"use strict";(self.webpackChunkgodlfish_static_landing_page=self.webpackChunkgodlfish_static_landing_page||[]).push([[94],{2643:function(e,t,r){r.d(t,{B2:function(){return Z},J3:function(){return E},Kt:function(){return ie},Kw:function(){return Dr},Ng:function(){return Ar},P3:function(){return O},Sr:function(){return Mr},ZX:function(){return re},yq:function(){return ye}});var i=r(8287),n=r(9031),s=r(4073),o=r.n(s),a=r(3466),c=r.n(a),u=r(9850),l=r(2755),d=r(601),h=r(184),g=r(3682),p=r(22),m=r.n(p),b=r(1809),f=r(1475),y=r(2848),w=r(4544);n.ev.utils.randomPrivateKey;const k=()=>{const e=n.ev.utils.randomPrivateKey(),t=S(e),r=new Uint8Array(64);return r.set(e),r.set(t,32),{publicKey:t,secretKey:r}},S=n.ev.getPublicKey;function I(e){try{return n.ev.ExtendedPoint.fromHex(e),!0}catch{return!1}}const v=(e,t)=>n.ev.sign(e,t.slice(0,32)),A=n.ev.verify,_=e=>i.Buffer.isBuffer(e)?e:e instanceof Uint8Array?i.Buffer.from(e.buffer,e.byteOffset,e.byteLength):i.Buffer.from(e);class B{constructor(e){Object.assign(this,e)}encode(){return i.Buffer.from((0,l.serialize)(W,this))}static decode(e){return(0,l.deserialize)(W,this,e)}static decodeUnchecked(e){return(0,l.deserializeUnchecked)(W,this,e)}}const W=new Map;var P;let x;const C=32;let N=1;x=Symbol.toStringTag;class E extends B{constructor(e){if(super({}),this._bn=void 0,function(e){return void 0!==e._bn}(e))this._bn=e._bn;else{if("string"==typeof e){const t=c().decode(e);if(t.length!=C)throw new Error("Invalid public key input");this._bn=new(o())(t)}else this._bn=new(o())(e);if(this._bn.byteLength()>C)throw new Error("Invalid public key input")}}static unique(){const e=new E(N);return N+=1,new E(e.toBuffer())}equals(e){return this._bn.eq(e._bn)}toBase58(){return c().encode(this.toBytes())}toJSON(){return this.toBase58()}toBytes(){const e=this.toBuffer();return new Uint8Array(e.buffer,e.byteOffset,e.byteLength)}toBuffer(){const e=this._bn.toArrayLike(i.Buffer);if(e.length===C)return e;const t=i.Buffer.alloc(32);return e.copy(t,32-e.length),t}get[x](){return`PublicKey(${this.toString()})`}toString(){return this.toBase58()}static async createWithSeed(e,t,r){const n=i.Buffer.concat([e.toBuffer(),i.Buffer.from(t),r.toBuffer()]),s=(0,u.s)(n);return new E(s)}static createProgramAddressSync(e,t){let r=i.Buffer.alloc(0);e.forEach((function(e){if(e.length>32)throw new TypeError("Max seed length exceeded");r=i.Buffer.concat([r,_(e)])})),r=i.Buffer.concat([r,t.toBuffer(),i.Buffer.from("ProgramDerivedAddress")]);const n=(0,u.s)(r);if(I(n))throw new Error("Invalid seeds, address must fall off the curve");return new E(n)}static async createProgramAddress(e,t){return this.createProgramAddressSync(e,t)}static findProgramAddressSync(e,t){let r,n=255;for(;0!=n;){try{const s=e.concat(i.Buffer.from([n]));r=this.createProgramAddressSync(s,t)}catch(s){if(s instanceof TypeError)throw s;n--;continue}return[r,n]}throw new Error("Unable to find a viable program address nonce")}static async findProgramAddress(e,t){return this.findProgramAddressSync(e,t)}static isOnCurve(e){return I(new E(e).toBytes())}}P=E,E.default=new P("11111111111111111111111111111111"),W.set(E,{kind:"struct",fields:[["_bn","u256"]]});new E("BPFLoader1111111111111111111111111111111111");const T=1232,O=64;class z extends Error{constructor(e){super(`Signature ${e} has expired: block height exceeded.`),this.signature=void 0,this.signature=e}}Object.defineProperty(z.prototype,"name",{value:"TransactionExpiredBlockheightExceededError"});class K extends Error{constructor(e,t){super(`Transaction was not confirmed in ${t.toFixed(2)} seconds. It is unknown if it succeeded or failed. Check signature ${e} using the Solana Explorer or CLI tools.`),this.signature=void 0,this.signature=e}}Object.defineProperty(K.prototype,"name",{value:"TransactionExpiredTimeoutError"});class q extends Error{constructor(e){super(`Signature ${e} has expired: the nonce is no longer valid.`),this.signature=void 0,this.signature=e}}Object.defineProperty(q.prototype,"name",{value:"TransactionExpiredNonceInvalidError"});class L{constructor(e,t){this.staticAccountKeys=void 0,this.accountKeysFromLookups=void 0,this.staticAccountKeys=e,this.accountKeysFromLookups=t}keySegments(){const e=[this.staticAccountKeys];return this.accountKeysFromLookups&&(e.push(this.accountKeysFromLookups.writable),e.push(this.accountKeysFromLookups.readonly)),e}get(e){for(const t of this.keySegments()){if(e<t.length)return t[e];e-=t.length}}get length(){return this.keySegments().flat().length}compileInstructions(e){if(this.length>256)throw new Error("Account index overflow encountered during compilation");const t=new Map;this.keySegments().flat().forEach(((e,r)=>{t.set(e.toBase58(),r)}));const r=e=>{const r=t.get(e.toBase58());if(void 0===r)throw new Error("Encountered an unknown instruction account key during compilation");return r};return e.map((e=>({programIdIndex:r(e.programId),accountKeyIndexes:e.keys.map((e=>r(e.pubkey))),data:e.data})))}}const R=(e="publicKey")=>d.av(32,e),Y=(e="signature")=>d.av(64,e),j=(e="string")=>{const t=d.w3([d.DH("length"),d.DH("lengthPadding"),d.av(d.cY(d.DH(),-8),"chars")],e),r=t.decode.bind(t),n=t.encode.bind(t),s=t;return s.decode=(e,t)=>r(e,t).chars.toString(),s.encode=(e,t,r)=>{const s={chars:i.Buffer.from(e,"utf8")};return n(s,t,r)},s.alloc=e=>d.DH().span+d.DH().span+i.Buffer.from(e,"utf8").length,s};function H(e,t){const r=e=>{if(e.span>=0)return e.span;if("function"==typeof e.alloc)return e.alloc(t[e.property]);if("count"in e&&"elementLayout"in e){const i=t[e.property];if(Array.isArray(i))return i.length*r(e.elementLayout)}else if("fields"in e)return H({layout:e},t[e.property]);return 0};let i=0;return e.layout.fields.forEach((e=>{i+=r(e)})),i}function D(e){let t=0,r=0;for(;;){let i=e.shift();if(t|=(127&i)<<7*r,r+=1,!(128&i))break}return t}function M(e,t){let r=t;for(;;){let t=127&r;if(r>>=7,0==r){e.push(t);break}t|=128,e.push(t)}}function U(e,t){if(!e)throw new Error(t||"Assertion failed")}class ${constructor(e,t){this.payer=void 0,this.keyMetaMap=void 0,this.payer=e,this.keyMetaMap=t}static compile(e,t){const r=new Map,i=e=>{const t=e.toBase58();let i=r.get(t);return void 0===i&&(i={isSigner:!1,isWritable:!1,isInvoked:!1},r.set(t,i)),i},n=i(t);n.isSigner=!0,n.isWritable=!0;for(const s of e){i(s.programId).isInvoked=!0;for(const e of s.keys){const t=i(e.pubkey);t.isSigner||=e.isSigner,t.isWritable||=e.isWritable}}return new $(t,r)}getMessageComponents(){const e=[...this.keyMetaMap.entries()];U(e.length<=256,"Max static account keys length exceeded");const t=e.filter((([,e])=>e.isSigner&&e.isWritable)),r=e.filter((([,e])=>e.isSigner&&!e.isWritable)),i=e.filter((([,e])=>!e.isSigner&&e.isWritable)),n=e.filter((([,e])=>!e.isSigner&&!e.isWritable)),s={numRequiredSignatures:t.length+r.length,numReadonlySignedAccounts:r.length,numReadonlyUnsignedAccounts:n.length};{U(t.length>0,"Expected at least one writable signer key");const[e]=t[0];U(e===this.payer.toBase58(),"Expected first writable signer key to be the fee payer")}return[s,[...t.map((([e])=>new E(e))),...r.map((([e])=>new E(e))),...i.map((([e])=>new E(e))),...n.map((([e])=>new E(e)))]]}extractTableLookup(e){const[t,r]=this.drainKeysFoundInLookupTable(e.state.addresses,(e=>!e.isSigner&&!e.isInvoked&&e.isWritable)),[i,n]=this.drainKeysFoundInLookupTable(e.state.addresses,(e=>!e.isSigner&&!e.isInvoked&&!e.isWritable));if(0!==t.length||0!==i.length)return[{accountKey:e.key,writableIndexes:t,readonlyIndexes:i},{writable:r,readonly:n}]}drainKeysFoundInLookupTable(e,t){const r=new Array,i=new Array;for(const[n,s]of this.keyMetaMap.entries())if(t(s)){const t=new E(n),s=e.findIndex((e=>e.equals(t)));s>=0&&(U(s<256,"Max lookup table index exceeded"),r.push(s),i.push(t),this.keyMetaMap.delete(n))}return[r,i]}}const F="Reached end of buffer unexpectedly";function V(e){if(0===e.length)throw new Error(F);return e.shift()}function J(e,...t){const[r]=t;if(2===t.length?r+(t[1]??0)>e.length:r>=e.length)throw new Error(F);return e.splice(...t)}class G{constructor(e){this.header=void 0,this.accountKeys=void 0,this.recentBlockhash=void 0,this.instructions=void 0,this.indexToProgramIds=new Map,this.header=e.header,this.accountKeys=e.accountKeys.map((e=>new E(e))),this.recentBlockhash=e.recentBlockhash,this.instructions=e.instructions,this.instructions.forEach((e=>this.indexToProgramIds.set(e.programIdIndex,this.accountKeys[e.programIdIndex])))}get version(){return"legacy"}get staticAccountKeys(){return this.accountKeys}get compiledInstructions(){return this.instructions.map((e=>({programIdIndex:e.programIdIndex,accountKeyIndexes:e.accounts,data:c().decode(e.data)})))}get addressTableLookups(){return[]}getAccountKeys(){return new L(this.staticAccountKeys)}static compile(e){const t=$.compile(e.instructions,e.payerKey),[r,i]=t.getMessageComponents(),n=new L(i).compileInstructions(e.instructions).map((e=>({programIdIndex:e.programIdIndex,accounts:e.accountKeyIndexes,data:c().encode(e.data)})));return new G({header:r,accountKeys:i,recentBlockhash:e.recentBlockhash,instructions:n})}isAccountSigner(e){return e<this.header.numRequiredSignatures}isAccountWritable(e){const t=this.header.numRequiredSignatures;if(e>=this.header.numRequiredSignatures){return e-t<this.accountKeys.length-t-this.header.numReadonlyUnsignedAccounts}return e<t-this.header.numReadonlySignedAccounts}isProgramId(e){return this.indexToProgramIds.has(e)}programIds(){return[...this.indexToProgramIds.values()]}nonProgramIds(){return this.accountKeys.filter(((e,t)=>!this.isProgramId(t)))}serialize(){const e=this.accountKeys.length;let t=[];M(t,e);const r=this.instructions.map((e=>{const{accounts:t,programIdIndex:r}=e,n=Array.from(c().decode(e.data));let s=[];M(s,t.length);let o=[];return M(o,n.length),{programIdIndex:r,keyIndicesCount:i.Buffer.from(s),keyIndices:t,dataLength:i.Buffer.from(o),data:n}}));let n=[];M(n,r.length);let s=i.Buffer.alloc(T);i.Buffer.from(n).copy(s);let o=n.length;r.forEach((e=>{const t=d.w3([d.u8("programIdIndex"),d.av(e.keyIndicesCount.length,"keyIndicesCount"),d.O6(d.u8("keyIndex"),e.keyIndices.length,"keyIndices"),d.av(e.dataLength.length,"dataLength"),d.O6(d.u8("userdatum"),e.data.length,"data")]).encode(e,s,o);o+=t})),s=s.slice(0,o);const a=d.w3([d.av(1,"numRequiredSignatures"),d.av(1,"numReadonlySignedAccounts"),d.av(1,"numReadonlyUnsignedAccounts"),d.av(t.length,"keyCount"),d.O6(R("key"),e,"keys"),R("recentBlockhash")]),u={numRequiredSignatures:i.Buffer.from([this.header.numRequiredSignatures]),numReadonlySignedAccounts:i.Buffer.from([this.header.numReadonlySignedAccounts]),numReadonlyUnsignedAccounts:i.Buffer.from([this.header.numReadonlyUnsignedAccounts]),keyCount:i.Buffer.from(t),keys:this.accountKeys.map((e=>_(e.toBytes()))),recentBlockhash:c().decode(this.recentBlockhash)};let l=i.Buffer.alloc(2048);const h=a.encode(u,l);return s.copy(l,h),l.slice(0,h+s.length)}static from(e){let t=[...e];const r=V(t);if(r!==(127&r))throw new Error("Versioned messages must be deserialized with VersionedMessage.deserialize()");const n=V(t),s=V(t),o=D(t);let a=[];for(let c=0;c<o;c++){const e=J(t,0,C);a.push(new E(i.Buffer.from(e)))}const u=J(t,0,C),l=D(t);let d=[];for(let g=0;g<l;g++){const e=V(t),r=J(t,0,D(t)),n=J(t,0,D(t)),s=c().encode(i.Buffer.from(n));d.push({programIdIndex:e,accounts:r,data:s})}const h={header:{numRequiredSignatures:r,numReadonlySignedAccounts:n,numReadonlyUnsignedAccounts:s},recentBlockhash:c().encode(i.Buffer.from(u)),accountKeys:a,instructions:d};return new G(h)}}class X{constructor(e){this.header=void 0,this.staticAccountKeys=void 0,this.recentBlockhash=void 0,this.compiledInstructions=void 0,this.addressTableLookups=void 0,this.header=e.header,this.staticAccountKeys=e.staticAccountKeys,this.recentBlockhash=e.recentBlockhash,this.compiledInstructions=e.compiledInstructions,this.addressTableLookups=e.addressTableLookups}get version(){return 0}get numAccountKeysFromLookups(){let e=0;for(const t of this.addressTableLookups)e+=t.readonlyIndexes.length+t.writableIndexes.length;return e}getAccountKeys(e){let t;if(e&&"accountKeysFromLookups"in e&&e.accountKeysFromLookups){if(this.numAccountKeysFromLookups!=e.accountKeysFromLookups.writable.length+e.accountKeysFromLookups.readonly.length)throw new Error("Failed to get account keys because of a mismatch in the number of account keys from lookups");t=e.accountKeysFromLookups}else if(e&&"addressLookupTableAccounts"in e&&e.addressLookupTableAccounts)t=this.resolveAddressTableLookups(e.addressLookupTableAccounts);else if(this.addressTableLookups.length>0)throw new Error("Failed to get account keys because address table lookups were not resolved");return new L(this.staticAccountKeys,t)}isAccountSigner(e){return e<this.header.numRequiredSignatures}isAccountWritable(e){const t=this.header.numRequiredSignatures,r=this.staticAccountKeys.length;if(e>=r){return e-r<this.addressTableLookups.reduce(((e,t)=>e+t.writableIndexes.length),0)}if(e>=this.header.numRequiredSignatures){return e-t<r-t-this.header.numReadonlyUnsignedAccounts}return e<t-this.header.numReadonlySignedAccounts}resolveAddressTableLookups(e){const t={writable:[],readonly:[]};for(const r of this.addressTableLookups){const i=e.find((e=>e.key.equals(r.accountKey)));if(!i)throw new Error(`Failed to find address lookup table account for table key ${r.accountKey.toBase58()}`);for(const e of r.writableIndexes){if(!(e<i.state.addresses.length))throw new Error(`Failed to find address for index ${e} in address lookup table ${r.accountKey.toBase58()}`);t.writable.push(i.state.addresses[e])}for(const e of r.readonlyIndexes){if(!(e<i.state.addresses.length))throw new Error(`Failed to find address for index ${e} in address lookup table ${r.accountKey.toBase58()}`);t.readonly.push(i.state.addresses[e])}}return t}static compile(e){const t=$.compile(e.instructions,e.payerKey),r=new Array,i={writable:new Array,readonly:new Array},n=e.addressLookupTableAccounts||[];for(const c of n){const e=t.extractTableLookup(c);if(void 0!==e){const[t,{writable:n,readonly:s}]=e;r.push(t),i.writable.push(...n),i.readonly.push(...s)}}const[s,o]=t.getMessageComponents(),a=new L(o,i).compileInstructions(e.instructions);return new X({header:s,staticAccountKeys:o,recentBlockhash:e.recentBlockhash,compiledInstructions:a,addressTableLookups:r})}serialize(){const e=Array();M(e,this.staticAccountKeys.length);const t=this.serializeInstructions(),r=Array();M(r,this.compiledInstructions.length);const i=this.serializeAddressTableLookups(),n=Array();M(n,this.addressTableLookups.length);const s=d.w3([d.u8("prefix"),d.w3([d.u8("numRequiredSignatures"),d.u8("numReadonlySignedAccounts"),d.u8("numReadonlyUnsignedAccounts")],"header"),d.av(e.length,"staticAccountKeysLength"),d.O6(R(),this.staticAccountKeys.length,"staticAccountKeys"),R("recentBlockhash"),d.av(r.length,"instructionsLength"),d.av(t.length,"serializedInstructions"),d.av(n.length,"addressTableLookupsLength"),d.av(i.length,"serializedAddressTableLookups")]),o=new Uint8Array(T),a=s.encode({prefix:128,header:this.header,staticAccountKeysLength:new Uint8Array(e),staticAccountKeys:this.staticAccountKeys.map((e=>e.toBytes())),recentBlockhash:c().decode(this.recentBlockhash),instructionsLength:new Uint8Array(r),serializedInstructions:t,addressTableLookupsLength:new Uint8Array(n),serializedAddressTableLookups:i},o);return o.slice(0,a)}serializeInstructions(){let e=0;const t=new Uint8Array(T);for(const r of this.compiledInstructions){const i=Array();M(i,r.accountKeyIndexes.length);const n=Array();M(n,r.data.length);e+=d.w3([d.u8("programIdIndex"),d.av(i.length,"encodedAccountKeyIndexesLength"),d.O6(d.u8(),r.accountKeyIndexes.length,"accountKeyIndexes"),d.av(n.length,"encodedDataLength"),d.av(r.data.length,"data")]).encode({programIdIndex:r.programIdIndex,encodedAccountKeyIndexesLength:new Uint8Array(i),accountKeyIndexes:r.accountKeyIndexes,encodedDataLength:new Uint8Array(n),data:r.data},t,e)}return t.slice(0,e)}serializeAddressTableLookups(){let e=0;const t=new Uint8Array(T);for(const r of this.addressTableLookups){const i=Array();M(i,r.writableIndexes.length);const n=Array();M(n,r.readonlyIndexes.length);e+=d.w3([R("accountKey"),d.av(i.length,"encodedWritableIndexesLength"),d.O6(d.u8(),r.writableIndexes.length,"writableIndexes"),d.av(n.length,"encodedReadonlyIndexesLength"),d.O6(d.u8(),r.readonlyIndexes.length,"readonlyIndexes")]).encode({accountKey:r.accountKey.toBytes(),encodedWritableIndexesLength:new Uint8Array(i),writableIndexes:r.writableIndexes,encodedReadonlyIndexesLength:new Uint8Array(n),readonlyIndexes:r.readonlyIndexes},t,e)}return t.slice(0,e)}static deserialize(e){let t=[...e];const r=V(t),i=127&r;U(r!==i,"Expected versioned message but received legacy message");U(0===i,`Expected versioned message with version 0 but found version ${i}`);const n={numRequiredSignatures:V(t),numReadonlySignedAccounts:V(t),numReadonlyUnsignedAccounts:V(t)},s=[],o=D(t);for(let c=0;c<o;c++)s.push(new E(J(t,0,C)));const a=c().encode(J(t,0,C)),u=D(t),l=[];for(let c=0;c<u;c++){const e=V(t),r=J(t,0,D(t)),i=D(t),n=new Uint8Array(J(t,0,i));l.push({programIdIndex:e,accountKeyIndexes:r,data:n})}const d=D(t),h=[];for(let c=0;c<d;c++){const e=new E(J(t,0,C)),r=J(t,0,D(t)),i=J(t,0,D(t));h.push({accountKey:e,writableIndexes:r,readonlyIndexes:i})}return new X({header:n,staticAccountKeys:s,recentBlockhash:a,compiledInstructions:l,addressTableLookups:h})}}const Z={deserializeMessageVersion(e){const t=e[0],r=127&t;return r===t?"legacy":r},deserialize:e=>{const t=Z.deserializeMessageVersion(e);if("legacy"===t)return G.from(e);if(0===t)return X.deserialize(e);throw new Error(`Transaction message version ${t} deserialization is not supported`)}};let Q=function(e){return e[e.BLOCKHEIGHT_EXCEEDED=0]="BLOCKHEIGHT_EXCEEDED",e[e.PROCESSED=1]="PROCESSED",e[e.TIMED_OUT=2]="TIMED_OUT",e[e.NONCE_INVALID=3]="NONCE_INVALID",e}({});const ee=i.Buffer.alloc(O).fill(0);class te{constructor(e){this.keys=void 0,this.programId=void 0,this.data=i.Buffer.alloc(0),this.programId=e.programId,this.keys=e.keys,e.data&&(this.data=e.data)}toJSON(){return{keys:this.keys.map((({pubkey:e,isSigner:t,isWritable:r})=>({pubkey:e.toJSON(),isSigner:t,isWritable:r}))),programId:this.programId.toJSON(),data:[...this.data]}}}class re{get signature(){return this.signatures.length>0?this.signatures[0].signature:null}constructor(e){if(this.signatures=[],this.feePayer=void 0,this.instructions=[],this.recentBlockhash=void 0,this.lastValidBlockHeight=void 0,this.nonceInfo=void 0,this.minNonceContextSlot=void 0,this._message=void 0,this._json=void 0,e)if(e.feePayer&&(this.feePayer=e.feePayer),e.signatures&&(this.signatures=e.signatures),Object.prototype.hasOwnProperty.call(e,"nonceInfo")){const{minContextSlot:t,nonceInfo:r}=e;this.minNonceContextSlot=t,this.nonceInfo=r}else if(Object.prototype.hasOwnProperty.call(e,"lastValidBlockHeight")){const{blockhash:t,lastValidBlockHeight:r}=e;this.recentBlockhash=t,this.lastValidBlockHeight=r}else{const{recentBlockhash:t,nonceInfo:r}=e;r&&(this.nonceInfo=r),this.recentBlockhash=t}}toJSON(){return{recentBlockhash:this.recentBlockhash||null,feePayer:this.feePayer?this.feePayer.toJSON():null,nonceInfo:this.nonceInfo?{nonce:this.nonceInfo.nonce,nonceInstruction:this.nonceInfo.nonceInstruction.toJSON()}:null,instructions:this.instructions.map((e=>e.toJSON())),signers:this.signatures.map((({publicKey:e})=>e.toJSON()))}}add(...e){if(0===e.length)throw new Error("No instructions");return e.forEach((e=>{"instructions"in e?this.instructions=this.instructions.concat(e.instructions):"data"in e&&"programId"in e&&"keys"in e?this.instructions.push(e):this.instructions.push(new te(e))})),this}compileMessage(){if(this._message&&JSON.stringify(this.toJSON())===JSON.stringify(this._json))return this._message;let e,t,r;if(this.nonceInfo?(e=this.nonceInfo.nonce,t=this.instructions[0]!=this.nonceInfo.nonceInstruction?[this.nonceInfo.nonceInstruction,...this.instructions]:this.instructions):(e=this.recentBlockhash,t=this.instructions),!e)throw new Error("Transaction recentBlockhash required");if(t.length<1&&console.warn("No instructions provided"),this.feePayer)r=this.feePayer;else{if(!(this.signatures.length>0&&this.signatures[0].publicKey))throw new Error("Transaction fee payer required");r=this.signatures[0].publicKey}for(let c=0;c<t.length;c++)if(void 0===t[c].programId)throw new Error(`Transaction instruction index ${c} has undefined program id`);const i=[],n=[];t.forEach((e=>{e.keys.forEach((e=>{n.push({...e})}));const t=e.programId.toString();i.includes(t)||i.push(t)})),i.forEach((e=>{n.push({pubkey:new E(e),isSigner:!1,isWritable:!1})}));const s=[];n.forEach((e=>{const t=e.pubkey.toString(),r=s.findIndex((e=>e.pubkey.toString()===t));r>-1?(s[r].isWritable=s[r].isWritable||e.isWritable,s[r].isSigner=s[r].isSigner||e.isSigner):s.push(e)})),s.sort((function(e,t){if(e.isSigner!==t.isSigner)return e.isSigner?-1:1;if(e.isWritable!==t.isWritable)return e.isWritable?-1:1;return e.pubkey.toBase58().localeCompare(t.pubkey.toBase58(),"en",{localeMatcher:"best fit",usage:"sort",sensitivity:"variant",ignorePunctuation:!1,numeric:!1,caseFirst:"lower"})}));const o=s.findIndex((e=>e.pubkey.equals(r)));if(o>-1){const[e]=s.splice(o,1);e.isSigner=!0,e.isWritable=!0,s.unshift(e)}else s.unshift({pubkey:r,isSigner:!0,isWritable:!0});for(const c of this.signatures){const e=s.findIndex((e=>e.pubkey.equals(c.publicKey)));if(!(e>-1))throw new Error(`unknown signer: ${c.publicKey.toString()}`);s[e].isSigner||(s[e].isSigner=!0,console.warn("Transaction references a signature that is unnecessary, only the fee payer and instruction signer accounts should sign a transaction. This behavior is deprecated and will throw an error in the next major version release."))}let a=0,u=0,l=0;const d=[],h=[];s.forEach((({pubkey:e,isSigner:t,isWritable:r})=>{t?(d.push(e.toString()),a+=1,r||(u+=1)):(h.push(e.toString()),r||(l+=1))}));const g=d.concat(h),p=t.map((e=>{const{data:t,programId:r}=e;return{programIdIndex:g.indexOf(r.toString()),accounts:e.keys.map((e=>g.indexOf(e.pubkey.toString()))),data:c().encode(t)}}));return p.forEach((e=>{U(e.programIdIndex>=0),e.accounts.forEach((e=>U(e>=0)))})),new G({header:{numRequiredSignatures:a,numReadonlySignedAccounts:u,numReadonlyUnsignedAccounts:l},accountKeys:g,recentBlockhash:e,instructions:p})}_compile(){const e=this.compileMessage(),t=e.accountKeys.slice(0,e.header.numRequiredSignatures);if(this.signatures.length===t.length){if(this.signatures.every(((e,r)=>t[r].equals(e.publicKey))))return e}return this.signatures=t.map((e=>({signature:null,publicKey:e}))),e}serializeMessage(){return this._compile().serialize()}async getEstimatedFee(e){return(await e.getFeeForMessage(this.compileMessage())).value}setSigners(...e){if(0===e.length)throw new Error("No signers");const t=new Set;this.signatures=e.filter((e=>{const r=e.toString();return!t.has(r)&&(t.add(r),!0)})).map((e=>({signature:null,publicKey:e})))}sign(...e){if(0===e.length)throw new Error("No signers");const t=new Set,r=[];for(const n of e){const e=n.publicKey.toString();t.has(e)||(t.add(e),r.push(n))}this.signatures=r.map((e=>({signature:null,publicKey:e.publicKey})));const i=this._compile();this._partialSign(i,...r)}partialSign(...e){if(0===e.length)throw new Error("No signers");const t=new Set,r=[];for(const n of e){const e=n.publicKey.toString();t.has(e)||(t.add(e),r.push(n))}const i=this._compile();this._partialSign(i,...r)}_partialSign(e,...t){const r=e.serialize();t.forEach((e=>{const t=v(r,e.secretKey);this._addSignature(e.publicKey,_(t))}))}addSignature(e,t){this._compile(),this._addSignature(e,t)}_addSignature(e,t){U(64===t.length);const r=this.signatures.findIndex((t=>e.equals(t.publicKey)));if(r<0)throw new Error(`unknown signer: ${e.toString()}`);this.signatures[r].signature=i.Buffer.from(t)}verifySignatures(e=!0){return!this._getMessageSignednessErrors(this.serializeMessage(),e)}_getMessageSignednessErrors(e,t){const r={};for(const{signature:i,publicKey:n}of this.signatures)null===i?t&&(r.missing||=[]).push(n):A(i,e,n.toBytes())||(r.invalid||=[]).push(n);return r.invalid||r.missing?r:void 0}serialize(e){const{requireAllSignatures:t,verifySignatures:r}=Object.assign({requireAllSignatures:!0,verifySignatures:!0},e),i=this.serializeMessage();if(r){const e=this._getMessageSignednessErrors(i,t);if(e){let t="Signature verification failed.";throw e.invalid&&(t+=`\nInvalid signature for public key${1===e.invalid.length?"":"(s)"} [\`${e.invalid.map((e=>e.toBase58())).join("`, `")}\`].`),e.missing&&(t+=`\nMissing signature for public key${1===e.missing.length?"":"(s)"} [\`${e.missing.map((e=>e.toBase58())).join("`, `")}\`].`),new Error(t)}}return this._serialize(i)}_serialize(e){const{signatures:t}=this,r=[];M(r,t.length);const n=r.length+64*t.length+e.length,s=i.Buffer.alloc(n);return U(t.length<256),i.Buffer.from(r).copy(s,0),t.forEach((({signature:e},t)=>{null!==e&&(U(64===e.length,"signature has invalid length"),i.Buffer.from(e).copy(s,r.length+64*t))})),e.copy(s,r.length+64*t.length),U(s.length<=T,`Transaction too large: ${s.length} > 1232`),s}get keys(){return U(1===this.instructions.length),this.instructions[0].keys.map((e=>e.pubkey))}get programId(){return U(1===this.instructions.length),this.instructions[0].programId}get data(){return U(1===this.instructions.length),this.instructions[0].data}static from(e){let t=[...e];const r=D(t);let n=[];for(let s=0;s<r;s++){const e=J(t,0,O);n.push(c().encode(i.Buffer.from(e)))}return re.populate(G.from(t),n)}static populate(e,t=[]){const r=new re;return r.recentBlockhash=e.recentBlockhash,e.header.numRequiredSignatures>0&&(r.feePayer=e.accountKeys[0]),t.forEach(((t,i)=>{const n={signature:t==c().encode(ee)?null:c().decode(t),publicKey:e.accountKeys[i]};r.signatures.push(n)})),e.instructions.forEach((t=>{const i=t.accounts.map((t=>{const i=e.accountKeys[t];return{pubkey:i,isSigner:r.signatures.some((e=>e.publicKey.toString()===i.toString()))||e.isAccountSigner(t),isWritable:e.isAccountWritable(t)}}));r.instructions.push(new te({keys:i,programId:e.accountKeys[t.programIdIndex],data:c().decode(t.data)}))})),r._message=e,r._json=r.toJSON(),r}}class ie{get version(){return this.message.version}constructor(e,t){if(this.signatures=void 0,this.message=void 0,void 0!==t)U(t.length===e.header.numRequiredSignatures,"Expected signatures length to be equal to the number of required signatures"),this.signatures=t;else{const t=[];for(let r=0;r<e.header.numRequiredSignatures;r++)t.push(new Uint8Array(O));this.signatures=t}this.message=e}serialize(){const e=this.message.serialize(),t=Array();M(t,this.signatures.length);const r=d.w3([d.av(t.length,"encodedSignaturesLength"),d.O6(Y(),this.signatures.length,"signatures"),d.av(e.length,"serializedMessage")]),i=new Uint8Array(2048),n=r.encode({encodedSignaturesLength:new Uint8Array(t),signatures:this.signatures,serializedMessage:e},i);return i.slice(0,n)}static deserialize(e){let t=[...e];const r=[],i=D(t);for(let s=0;s<i;s++)r.push(new Uint8Array(J(t,0,O)));const n=Z.deserialize(new Uint8Array(t));return new ie(n,r)}sign(e){const t=this.message.serialize(),r=this.message.staticAccountKeys.slice(0,this.message.header.numRequiredSignatures);for(const i of e){const e=r.findIndex((e=>e.equals(i.publicKey)));U(e>=0,`Cannot sign with non signer key ${i.publicKey.toBase58()}`),this.signatures[e]=v(t,i.secretKey)}}addSignature(e,t){U(64===t.byteLength,"Signature must be 64 bytes long");const r=this.message.staticAccountKeys.slice(0,this.message.header.numRequiredSignatures).findIndex((t=>t.equals(e)));U(r>=0,`Can not add signature; \`${e.toBase58()}\` is not required to sign this transaction`),this.signatures[r]=t}}const ne=new E("SysvarC1ock11111111111111111111111111111111"),se=(new E("SysvarEpochSchedu1e111111111111111111111111"),new E("Sysvar1nstructions1111111111111111111111111"),new E("SysvarRecentB1ockHashes11111111111111111111")),oe=new E("SysvarRent111111111111111111111111111111111"),ae=(new E("SysvarRewards111111111111111111111111111111"),new E("SysvarS1otHashes111111111111111111111111111"),new E("SysvarS1otHistory11111111111111111111111111"),new E("SysvarStakeHistory1111111111111111111111111"));async function ce(e,t,r,i){const n=i&&{skipPreflight:i.skipPreflight,preflightCommitment:i.preflightCommitment||i.commitment,maxRetries:i.maxRetries,minContextSlot:i.minContextSlot},s=await e.sendTransaction(t,r,n);let o;if(null!=t.recentBlockhash&&null!=t.lastValidBlockHeight)o=(await e.confirmTransaction({abortSignal:i?.abortSignal,signature:s,blockhash:t.recentBlockhash,lastValidBlockHeight:t.lastValidBlockHeight},i&&i.commitment)).value;else if(null!=t.minNonceContextSlot&&null!=t.nonceInfo){const{nonceInstruction:r}=t.nonceInfo,n=r.keys[0].pubkey;o=(await e.confirmTransaction({abortSignal:i?.abortSignal,minContextSlot:t.minNonceContextSlot,nonceAccountPubkey:n,nonceValue:t.nonceInfo.nonce,signature:s},i&&i.commitment)).value}else null!=i?.abortSignal&&console.warn("sendAndConfirmTransaction(): A transaction with a deprecated confirmation strategy was supplied along with an `abortSignal`. Only transactions having `lastValidBlockHeight` or a combination of `nonceInfo` and `minNonceContextSlot` are abortable."),o=(await e.confirmTransaction(s,i&&i.commitment)).value;if(o.err)throw new Error(`Transaction ${s} failed (${JSON.stringify(o)})`);return s}function ue(e){return new Promise((t=>setTimeout(t,e)))}function le(e,t){const r=e.layout.span>=0?e.layout.span:H(e,t),n=i.Buffer.alloc(r),s=Object.assign({instruction:e.index},t);return e.layout.encode(s,n),n}const de=d.I0("lamportsPerSignature"),he=d.w3([d.DH("version"),d.DH("state"),R("authorizedPubkey"),R("nonce"),d.w3([de],"feeCalculator")]),ge=he.span;class pe{constructor(e){this.authorizedPubkey=void 0,this.nonce=void 0,this.feeCalculator=void 0,this.authorizedPubkey=e.authorizedPubkey,this.nonce=e.nonce,this.feeCalculator=e.feeCalculator}static fromAccountData(e){const t=he.decode(_(e),0);return new pe({authorizedPubkey:new E(t.authorizedPubkey),nonce:new E(t.nonce).toString(),feeCalculator:t.feeCalculator})}}const me=(be=8,e=>{const t=(0,d.av)(be,e),{encode:r,decode:n}=(e=>({decode:e.decode.bind(e),encode:e.encode.bind(e)}))(t),s=t;return s.decode=(e,t)=>{const r=n(e,t);return(0,h.k5)(i.Buffer.from(r))},s.encode=(e,t,i)=>{const n=(0,h.Bq)(e,be);return r(n,t,i)},s});var be;const fe=Object.freeze({Create:{index:0,layout:d.w3([d.DH("instruction"),d.Wg("lamports"),d.Wg("space"),R("programId")])},Assign:{index:1,layout:d.w3([d.DH("instruction"),R("programId")])},Transfer:{index:2,layout:d.w3([d.DH("instruction"),me("lamports")])},CreateWithSeed:{index:3,layout:d.w3([d.DH("instruction"),R("base"),j("seed"),d.Wg("lamports"),d.Wg("space"),R("programId")])},AdvanceNonceAccount:{index:4,layout:d.w3([d.DH("instruction")])},WithdrawNonceAccount:{index:5,layout:d.w3([d.DH("instruction"),d.Wg("lamports")])},InitializeNonceAccount:{index:6,layout:d.w3([d.DH("instruction"),R("authorized")])},AuthorizeNonceAccount:{index:7,layout:d.w3([d.DH("instruction"),R("authorized")])},Allocate:{index:8,layout:d.w3([d.DH("instruction"),d.Wg("space")])},AllocateWithSeed:{index:9,layout:d.w3([d.DH("instruction"),R("base"),j("seed"),d.Wg("space"),R("programId")])},AssignWithSeed:{index:10,layout:d.w3([d.DH("instruction"),R("base"),j("seed"),R("programId")])},TransferWithSeed:{index:11,layout:d.w3([d.DH("instruction"),me("lamports"),j("seed"),R("programId")])},UpgradeNonceAccount:{index:12,layout:d.w3([d.DH("instruction")])}});class ye{constructor(){}static createAccount(e){const t=le(fe.Create,{lamports:e.lamports,space:e.space,programId:_(e.programId.toBuffer())});return new te({keys:[{pubkey:e.fromPubkey,isSigner:!0,isWritable:!0},{pubkey:e.newAccountPubkey,isSigner:!0,isWritable:!0}],programId:this.programId,data:t})}static transfer(e){let t,r;if("basePubkey"in e){t=le(fe.TransferWithSeed,{lamports:BigInt(e.lamports),seed:e.seed,programId:_(e.programId.toBuffer())}),r=[{pubkey:e.fromPubkey,isSigner:!1,isWritable:!0},{pubkey:e.basePubkey,isSigner:!0,isWritable:!1},{pubkey:e.toPubkey,isSigner:!1,isWritable:!0}]}else{t=le(fe.Transfer,{lamports:BigInt(e.lamports)}),r=[{pubkey:e.fromPubkey,isSigner:!0,isWritable:!0},{pubkey:e.toPubkey,isSigner:!1,isWritable:!0}]}return new te({keys:r,programId:this.programId,data:t})}static assign(e){let t,r;if("basePubkey"in e){t=le(fe.AssignWithSeed,{base:_(e.basePubkey.toBuffer()),seed:e.seed,programId:_(e.programId.toBuffer())}),r=[{pubkey:e.accountPubkey,isSigner:!1,isWritable:!0},{pubkey:e.basePubkey,isSigner:!0,isWritable:!1}]}else{t=le(fe.Assign,{programId:_(e.programId.toBuffer())}),r=[{pubkey:e.accountPubkey,isSigner:!0,isWritable:!0}]}return new te({keys:r,programId:this.programId,data:t})}static createAccountWithSeed(e){const t=le(fe.CreateWithSeed,{base:_(e.basePubkey.toBuffer()),seed:e.seed,lamports:e.lamports,space:e.space,programId:_(e.programId.toBuffer())});let r=[{pubkey:e.fromPubkey,isSigner:!0,isWritable:!0},{pubkey:e.newAccountPubkey,isSigner:!1,isWritable:!0}];return e.basePubkey!=e.fromPubkey&&r.push({pubkey:e.basePubkey,isSigner:!0,isWritable:!1}),new te({keys:r,programId:this.programId,data:t})}static createNonceAccount(e){const t=new re;"basePubkey"in e&&"seed"in e?t.add(ye.createAccountWithSeed({fromPubkey:e.fromPubkey,newAccountPubkey:e.noncePubkey,basePubkey:e.basePubkey,seed:e.seed,lamports:e.lamports,space:ge,programId:this.programId})):t.add(ye.createAccount({fromPubkey:e.fromPubkey,newAccountPubkey:e.noncePubkey,lamports:e.lamports,space:ge,programId:this.programId}));const r={noncePubkey:e.noncePubkey,authorizedPubkey:e.authorizedPubkey};return t.add(this.nonceInitialize(r)),t}static nonceInitialize(e){const t=le(fe.InitializeNonceAccount,{authorized:_(e.authorizedPubkey.toBuffer())}),r={keys:[{pubkey:e.noncePubkey,isSigner:!1,isWritable:!0},{pubkey:se,isSigner:!1,isWritable:!1},{pubkey:oe,isSigner:!1,isWritable:!1}],programId:this.programId,data:t};return new te(r)}static nonceAdvance(e){const t=le(fe.AdvanceNonceAccount),r={keys:[{pubkey:e.noncePubkey,isSigner:!1,isWritable:!0},{pubkey:se,isSigner:!1,isWritable:!1},{pubkey:e.authorizedPubkey,isSigner:!0,isWritable:!1}],programId:this.programId,data:t};return new te(r)}static nonceWithdraw(e){const t=le(fe.WithdrawNonceAccount,{lamports:e.lamports});return new te({keys:[{pubkey:e.noncePubkey,isSigner:!1,isWritable:!0},{pubkey:e.toPubkey,isSigner:!1,isWritable:!0},{pubkey:se,isSigner:!1,isWritable:!1},{pubkey:oe,isSigner:!1,isWritable:!1},{pubkey:e.authorizedPubkey,isSigner:!0,isWritable:!1}],programId:this.programId,data:t})}static nonceAuthorize(e){const t=le(fe.AuthorizeNonceAccount,{authorized:_(e.newAuthorizedPubkey.toBuffer())});return new te({keys:[{pubkey:e.noncePubkey,isSigner:!1,isWritable:!0},{pubkey:e.authorizedPubkey,isSigner:!0,isWritable:!1}],programId:this.programId,data:t})}static allocate(e){let t,r;if("basePubkey"in e){t=le(fe.AllocateWithSeed,{base:_(e.basePubkey.toBuffer()),seed:e.seed,space:e.space,programId:_(e.programId.toBuffer())}),r=[{pubkey:e.accountPubkey,isSigner:!1,isWritable:!0},{pubkey:e.basePubkey,isSigner:!0,isWritable:!1}]}else{t=le(fe.Allocate,{space:e.space}),r=[{pubkey:e.accountPubkey,isSigner:!0,isWritable:!0}]}return new te({keys:r,programId:this.programId,data:t})}}ye.programId=new E("11111111111111111111111111111111");class we{constructor(){}static getMinNumSignatures(e){return 2*(Math.ceil(e/we.chunkSize)+1+1)}static async load(e,t,r,n,s){{const i=await e.getMinimumBalanceForRentExemption(s.length),o=await e.getAccountInfo(r.publicKey,"confirmed");let a=null;if(null!==o){if(o.executable)return console.error("Program load failed, account is already executable"),!1;o.data.length!==s.length&&(a=a||new re,a.add(ye.allocate({accountPubkey:r.publicKey,space:s.length}))),o.owner.equals(n)||(a=a||new re,a.add(ye.assign({accountPubkey:r.publicKey,programId:n}))),o.lamports<i&&(a=a||new re,a.add(ye.transfer({fromPubkey:t.publicKey,toPubkey:r.publicKey,lamports:i-o.lamports})))}else a=(new re).add(ye.createAccount({fromPubkey:t.publicKey,newAccountPubkey:r.publicKey,lamports:i>0?i:1,space:s.length,programId:n}));null!==a&&await ce(e,a,[t,r],{commitment:"confirmed"})}const o=d.w3([d.DH("instruction"),d.DH("offset"),d.DH("bytesLength"),d.DH("bytesLengthPadding"),d.O6(d.u8("byte"),d.cY(d.DH(),-8),"bytes")]),a=we.chunkSize;let c=0,u=s,l=[];for(;u.length>0;){const s=u.slice(0,a),d=i.Buffer.alloc(a+16);o.encode({instruction:0,offset:c,bytes:s,bytesLength:0,bytesLengthPadding:0},d);const h=(new re).add({keys:[{pubkey:r.publicKey,isSigner:!0,isWritable:!0}],programId:n,data:d});if(l.push(ce(e,h,[t,r],{commitment:"confirmed"})),e._rpcEndpoint.includes("solana.com")){const e=4;await ue(1e3/e)}c+=a,u=u.slice(a)}await Promise.all(l);{const s=d.w3([d.DH("instruction")]),o=i.Buffer.alloc(s.span);s.encode({instruction:1},o);const a=(new re).add({keys:[{pubkey:r.publicKey,isSigner:!0,isWritable:!0},{pubkey:oe,isSigner:!1,isWritable:!1}],programId:n,data:o}),c="processed",u=await e.sendTransaction(a,[t,r],{preflightCommitment:c}),{context:l,value:h}=await e.confirmTransaction({signature:u,lastValidBlockHeight:a.lastValidBlockHeight,blockhash:a.recentBlockhash},c);if(h.err)throw new Error(`Transaction ${u} failed (${JSON.stringify(h)})`);for(;;){try{if(await e.getSlot({commitment:c})>l.slot)break}catch{}await new Promise((e=>setTimeout(e,Math.round(200))))}}return!0}}we.chunkSize=932;new E("BPFLoader2111111111111111111111111111111111");function ke(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e}var Se=Object.prototype.toString,Ie=Object.keys||function(e){var t=[];for(var r in e)t.push(r);return t};function ve(e,t){var r,i,n,s,o,a,c;if(!0===e)return"true";if(!1===e)return"false";switch(typeof e){case"object":if(null===e)return null;if(e.toJSON&&"function"==typeof e.toJSON)return ve(e.toJSON(),t);if("[object Array]"===(c=Se.call(e))){for(n="[",i=e.length-1,r=0;r<i;r++)n+=ve(e[r],!0)+",";return i>-1&&(n+=ve(e[r],!0)),n+"]"}if("[object Object]"===c){for(i=(s=Ie(e).sort()).length,n="",r=0;r<i;)void 0!==(a=ve(e[o=s[r]],!1))&&(n&&(n+=","),n+=JSON.stringify(o)+":"+a),r++;return"{"+n+"}"}return JSON.stringify(e);case"function":case"undefined":return t?null:void 0;case"string":return JSON.stringify(e);default:return isFinite(e)?e:null}}var Ae=ke((function(e){var t=ve(e,!1);if(void 0!==t)return""+t}));function _e(e){let t=0;for(;e>1;)e/=2,t++;return t}class Be{constructor(e,t,r,i,n){this.slotsPerEpoch=void 0,this.leaderScheduleSlotOffset=void 0,this.warmup=void 0,this.firstNormalEpoch=void 0,this.firstNormalSlot=void 0,this.slotsPerEpoch=e,this.leaderScheduleSlotOffset=t,this.warmup=r,this.firstNormalEpoch=i,this.firstNormalSlot=n}getEpoch(e){return this.getEpochAndSlotIndex(e)[0]}getEpochAndSlotIndex(e){if(e<this.firstNormalSlot){const r=_e(0===(t=e+32+1)?1:(t--,t|=t>>1,t|=t>>2,t|=t>>4,t|=t>>8,t|=t>>16,1+(t|=t>>32)))-_e(32)-1;return[r,e-(this.getSlotsInEpoch(r)-32)]}{const t=e-this.firstNormalSlot,r=Math.floor(t/this.slotsPerEpoch);return[this.firstNormalEpoch+r,t%this.slotsPerEpoch]}var t}getFirstSlotInEpoch(e){return e<=this.firstNormalEpoch?32*(Math.pow(2,e)-1):(e-this.firstNormalEpoch)*this.slotsPerEpoch+this.firstNormalSlot}getLastSlotInEpoch(e){return this.getFirstSlotInEpoch(e)+this.getSlotsInEpoch(e)-1}getSlotsInEpoch(e){return e<this.firstNormalEpoch?Math.pow(2,e+_e(32)):this.slotsPerEpoch}}class We extends Error{constructor(e,t){super(e),this.logs=void 0,this.logs=t}}class Pe extends Error{constructor({code:e,message:t,data:r},i){super(null!=i?`${i}: ${t}`:t),this.code=void 0,this.data=void 0,this.code=e,this.data=r,this.name="SolanaJSONRPCError"}}var xe=globalThis.fetch;class Ce extends b.A{constructor(e,t,r){super((e=>{const r=(0,f.A)(e,{autoconnect:!0,max_reconnects:5,reconnect:!0,reconnect_interval:1e3,...t});return this.underlyingSocket="socket"in r?r.socket:r,r}),e,t,r),this.underlyingSocket=void 0}call(...e){const t=this.underlyingSocket?.readyState;return 1===t?super.call(...e):Promise.reject(new Error("Tried to call a JSON-RPC method `"+e[0]+"` but the socket was not `CONNECTING` or `OPEN` (`readyState` was "+t+")"))}notify(...e){const t=this.underlyingSocket?.readyState;return 1===t?super.notify(...e):Promise.reject(new Error("Tried to send a JSON-RPC notification `"+e[0]+"` but the socket was not `CONNECTING` or `OPEN` (`readyState` was "+t+")"))}}class Ne{constructor(e){this.key=void 0,this.state=void 0,this.key=e.key,this.state=e.state}isActive(){const e=BigInt("0xffffffffffffffff");return this.state.deactivationSlot===e}static deserialize(e){const t=function(e,t){let r;try{r=e.layout.decode(t)}catch(i){throw new Error("invalid instruction; "+i)}if(r.typeIndex!==e.index)throw new Error(`invalid account data; account type mismatch ${r.typeIndex} != ${e.index}`);return r}(Ee,e),r=e.length-56;U(r>=0,"lookup table is invalid"),U(r%32==0,"lookup table is invalid");const i=r/32,{addresses:n}=d.w3([d.O6(R(),i,"addresses")]).decode(e.slice(56));return{deactivationSlot:t.deactivationSlot,lastExtendedSlot:t.lastExtendedSlot,lastExtendedSlotStartIndex:t.lastExtendedStartIndex,authority:0!==t.authority.length?new E(t.authority[0]):void 0,addresses:n.map((e=>new E(e)))}}}const Ee={index:1,layout:d.w3([d.DH("typeIndex"),me("deactivationSlot"),d.I0("lastExtendedSlot"),d.u8("lastExtendedStartIndex"),d.u8(),d.O6(R(),d.cY(d.u8(),-1),"authority")])},Te=/^[^:]+:\/\/([^:[]+|\[[^\]]+\])(:\d+)?(.*)/i;const Oe=(0,g.au)((0,g.KJ)(E),(0,g.Yj)(),(e=>new E(e))),ze=(0,g.PV)([(0,g.Yj)(),(0,g.eu)("base64")]),Ke=(0,g.au)((0,g.KJ)(i.Buffer),ze,(e=>i.Buffer.from(e[0],"base64")));function qe(e){let t,r;if("string"==typeof e)t=e;else if(e){const{commitment:i,...n}=e;t=i,r=n}return{commitment:t,config:r}}function Le(e){return(0,g.KC)([(0,g.NW)({jsonrpc:(0,g.eu)("2.0"),id:(0,g.Yj)(),result:e}),(0,g.NW)({jsonrpc:(0,g.eu)("2.0"),id:(0,g.Yj)(),error:(0,g.NW)({code:(0,g.L5)(),message:(0,g.Yj)(),data:(0,g.lq)((0,g.bz)())})})])}const Re=Le((0,g.L5)());function Ye(e){return(0,g.au)(Le(e),Re,(t=>"error"in t?t:{...t,result:(0,g.vt)(t.result,e)}))}function je(e){return Ye((0,g.NW)({context:(0,g.NW)({slot:(0,g.ai)()}),value:e}))}function He(e){return(0,g.NW)({context:(0,g.NW)({slot:(0,g.ai)()}),value:e})}function De(e,t){return 0===e?new X({header:t.header,staticAccountKeys:t.accountKeys.map((e=>new E(e))),recentBlockhash:t.recentBlockhash,compiledInstructions:t.instructions.map((e=>({programIdIndex:e.programIdIndex,accountKeyIndexes:e.accounts,data:c().decode(e.data)}))),addressTableLookups:t.addressTableLookups}):new G(t)}const Me=(0,g.NW)({foundation:(0,g.ai)(),foundationTerm:(0,g.ai)(),initial:(0,g.ai)(),taper:(0,g.ai)(),terminal:(0,g.ai)()}),Ue=Ye((0,g.YO)((0,g.me)((0,g.NW)({epoch:(0,g.ai)(),effectiveSlot:(0,g.ai)(),amount:(0,g.ai)(),postBalance:(0,g.ai)(),commission:(0,g.lq)((0,g.me)((0,g.ai)()))})))),$e=(0,g.YO)((0,g.NW)({slot:(0,g.ai)(),prioritizationFee:(0,g.ai)()})),Fe=(0,g.NW)({total:(0,g.ai)(),validator:(0,g.ai)(),foundation:(0,g.ai)(),epoch:(0,g.ai)()}),Ve=(0,g.NW)({epoch:(0,g.ai)(),slotIndex:(0,g.ai)(),slotsInEpoch:(0,g.ai)(),absoluteSlot:(0,g.ai)(),blockHeight:(0,g.lq)((0,g.ai)()),transactionCount:(0,g.lq)((0,g.ai)())}),Je=(0,g.NW)({slotsPerEpoch:(0,g.ai)(),leaderScheduleSlotOffset:(0,g.ai)(),warmup:(0,g.zM)(),firstNormalEpoch:(0,g.ai)(),firstNormalSlot:(0,g.ai)()}),Ge=(0,g.g1)((0,g.Yj)(),(0,g.YO)((0,g.ai)())),Xe=(0,g.me)((0,g.KC)([(0,g.NW)({}),(0,g.Yj)()])),Ze=(0,g.NW)({err:Xe}),Qe=(0,g.eu)("receivedSignature"),et=(0,g.NW)({"solana-core":(0,g.Yj)(),"feature-set":(0,g.lq)((0,g.ai)())}),tt=je((0,g.NW)({err:(0,g.me)((0,g.KC)([(0,g.NW)({}),(0,g.Yj)()])),logs:(0,g.me)((0,g.YO)((0,g.Yj)())),accounts:(0,g.lq)((0,g.me)((0,g.YO)((0,g.me)((0,g.NW)({executable:(0,g.zM)(),owner:(0,g.Yj)(),lamports:(0,g.ai)(),data:(0,g.YO)((0,g.Yj)()),rentEpoch:(0,g.lq)((0,g.ai)())}))))),unitsConsumed:(0,g.lq)((0,g.ai)()),returnData:(0,g.lq)((0,g.me)((0,g.NW)({programId:(0,g.Yj)(),data:(0,g.PV)([(0,g.Yj)(),(0,g.eu)("base64")])})))})),rt=je((0,g.NW)({byIdentity:(0,g.g1)((0,g.Yj)(),(0,g.YO)((0,g.ai)())),range:(0,g.NW)({firstSlot:(0,g.ai)(),lastSlot:(0,g.ai)()})}));const it=Ye(Me),nt=Ye(Fe),st=Ye($e),ot=Ye(Ve),at=Ye(Je),ct=Ye(Ge),ut=Ye((0,g.ai)()),lt=je((0,g.NW)({total:(0,g.ai)(),circulating:(0,g.ai)(),nonCirculating:(0,g.ai)(),nonCirculatingAccounts:(0,g.YO)(Oe)})),dt=(0,g.NW)({amount:(0,g.Yj)(),uiAmount:(0,g.me)((0,g.ai)()),decimals:(0,g.ai)(),uiAmountString:(0,g.lq)((0,g.Yj)())}),ht=je((0,g.YO)((0,g.NW)({address:Oe,amount:(0,g.Yj)(),uiAmount:(0,g.me)((0,g.ai)()),decimals:(0,g.ai)(),uiAmountString:(0,g.lq)((0,g.Yj)())}))),gt=je((0,g.YO)((0,g.NW)({pubkey:Oe,account:(0,g.NW)({executable:(0,g.zM)(),owner:Oe,lamports:(0,g.ai)(),data:Ke,rentEpoch:(0,g.ai)()})}))),pt=(0,g.NW)({program:(0,g.Yj)(),parsed:(0,g.L5)(),space:(0,g.ai)()}),mt=je((0,g.YO)((0,g.NW)({pubkey:Oe,account:(0,g.NW)({executable:(0,g.zM)(),owner:Oe,lamports:(0,g.ai)(),data:pt,rentEpoch:(0,g.ai)()})}))),bt=je((0,g.YO)((0,g.NW)({lamports:(0,g.ai)(),address:Oe}))),ft=(0,g.NW)({executable:(0,g.zM)(),owner:Oe,lamports:(0,g.ai)(),data:Ke,rentEpoch:(0,g.ai)()}),yt=(0,g.NW)({pubkey:Oe,account:ft}),wt=(0,g.au)((0,g.KC)([(0,g.KJ)(i.Buffer),pt]),(0,g.KC)([ze,pt]),(e=>Array.isArray(e)?(0,g.vt)(e,Ke):e)),kt=(0,g.NW)({executable:(0,g.zM)(),owner:Oe,lamports:(0,g.ai)(),data:wt,rentEpoch:(0,g.ai)()}),St=(0,g.NW)({pubkey:Oe,account:kt}),It=(0,g.NW)({state:(0,g.KC)([(0,g.eu)("active"),(0,g.eu)("inactive"),(0,g.eu)("activating"),(0,g.eu)("deactivating")]),active:(0,g.ai)(),inactive:(0,g.ai)()}),vt=Ye((0,g.YO)((0,g.NW)({signature:(0,g.Yj)(),slot:(0,g.ai)(),err:Xe,memo:(0,g.me)((0,g.Yj)()),blockTime:(0,g.lq)((0,g.me)((0,g.ai)()))}))),At=Ye((0,g.YO)((0,g.NW)({signature:(0,g.Yj)(),slot:(0,g.ai)(),err:Xe,memo:(0,g.me)((0,g.Yj)()),blockTime:(0,g.lq)((0,g.me)((0,g.ai)()))}))),_t=(0,g.NW)({subscription:(0,g.ai)(),result:He(ft)}),Bt=(0,g.NW)({pubkey:Oe,account:ft}),Wt=(0,g.NW)({subscription:(0,g.ai)(),result:He(Bt)}),Pt=(0,g.NW)({parent:(0,g.ai)(),slot:(0,g.ai)(),root:(0,g.ai)()}),xt=(0,g.NW)({subscription:(0,g.ai)(),result:Pt}),Ct=(0,g.KC)([(0,g.NW)({type:(0,g.KC)([(0,g.eu)("firstShredReceived"),(0,g.eu)("completed"),(0,g.eu)("optimisticConfirmation"),(0,g.eu)("root")]),slot:(0,g.ai)(),timestamp:(0,g.ai)()}),(0,g.NW)({type:(0,g.eu)("createdBank"),parent:(0,g.ai)(),slot:(0,g.ai)(),timestamp:(0,g.ai)()}),(0,g.NW)({type:(0,g.eu)("frozen"),slot:(0,g.ai)(),timestamp:(0,g.ai)(),stats:(0,g.NW)({numTransactionEntries:(0,g.ai)(),numSuccessfulTransactions:(0,g.ai)(),numFailedTransactions:(0,g.ai)(),maxTransactionsPerEntry:(0,g.ai)()})}),(0,g.NW)({type:(0,g.eu)("dead"),slot:(0,g.ai)(),timestamp:(0,g.ai)(),err:(0,g.Yj)()})]),Nt=(0,g.NW)({subscription:(0,g.ai)(),result:Ct}),Et=(0,g.NW)({subscription:(0,g.ai)(),result:He((0,g.KC)([Ze,Qe]))}),Tt=(0,g.NW)({subscription:(0,g.ai)(),result:(0,g.ai)()}),Ot=(0,g.NW)({pubkey:(0,g.Yj)(),gossip:(0,g.me)((0,g.Yj)()),tpu:(0,g.me)((0,g.Yj)()),rpc:(0,g.me)((0,g.Yj)()),version:(0,g.me)((0,g.Yj)())}),zt=(0,g.NW)({votePubkey:(0,g.Yj)(),nodePubkey:(0,g.Yj)(),activatedStake:(0,g.ai)(),epochVoteAccount:(0,g.zM)(),epochCredits:(0,g.YO)((0,g.PV)([(0,g.ai)(),(0,g.ai)(),(0,g.ai)()])),commission:(0,g.ai)(),lastVote:(0,g.ai)(),rootSlot:(0,g.me)((0,g.ai)())}),Kt=Ye((0,g.NW)({current:(0,g.YO)(zt),delinquent:(0,g.YO)(zt)})),qt=(0,g.KC)([(0,g.eu)("processed"),(0,g.eu)("confirmed"),(0,g.eu)("finalized")]),Lt=(0,g.NW)({slot:(0,g.ai)(),confirmations:(0,g.me)((0,g.ai)()),err:Xe,confirmationStatus:(0,g.lq)(qt)}),Rt=je((0,g.YO)((0,g.me)(Lt))),Yt=Ye((0,g.ai)()),jt=(0,g.NW)({accountKey:Oe,writableIndexes:(0,g.YO)((0,g.ai)()),readonlyIndexes:(0,g.YO)((0,g.ai)())}),Ht=(0,g.NW)({signatures:(0,g.YO)((0,g.Yj)()),message:(0,g.NW)({accountKeys:(0,g.YO)((0,g.Yj)()),header:(0,g.NW)({numRequiredSignatures:(0,g.ai)(),numReadonlySignedAccounts:(0,g.ai)(),numReadonlyUnsignedAccounts:(0,g.ai)()}),instructions:(0,g.YO)((0,g.NW)({accounts:(0,g.YO)((0,g.ai)()),data:(0,g.Yj)(),programIdIndex:(0,g.ai)()})),recentBlockhash:(0,g.Yj)(),addressTableLookups:(0,g.lq)((0,g.YO)(jt))})}),Dt=(0,g.NW)({pubkey:Oe,signer:(0,g.zM)(),writable:(0,g.zM)(),source:(0,g.lq)((0,g.KC)([(0,g.eu)("transaction"),(0,g.eu)("lookupTable")]))}),Mt=(0,g.NW)({accountKeys:(0,g.YO)(Dt),signatures:(0,g.YO)((0,g.Yj)())}),Ut=(0,g.NW)({parsed:(0,g.L5)(),program:(0,g.Yj)(),programId:Oe}),$t=(0,g.NW)({accounts:(0,g.YO)(Oe),data:(0,g.Yj)(),programId:Oe}),Ft=(0,g.KC)([$t,Ut]),Vt=(0,g.KC)([(0,g.NW)({parsed:(0,g.L5)(),program:(0,g.Yj)(),programId:(0,g.Yj)()}),(0,g.NW)({accounts:(0,g.YO)((0,g.Yj)()),data:(0,g.Yj)(),programId:(0,g.Yj)()})]),Jt=(0,g.au)(Ft,Vt,(e=>"accounts"in e?(0,g.vt)(e,$t):(0,g.vt)(e,Ut))),Gt=(0,g.NW)({signatures:(0,g.YO)((0,g.Yj)()),message:(0,g.NW)({accountKeys:(0,g.YO)(Dt),instructions:(0,g.YO)(Jt),recentBlockhash:(0,g.Yj)(),addressTableLookups:(0,g.lq)((0,g.me)((0,g.YO)(jt)))})}),Xt=(0,g.NW)({accountIndex:(0,g.ai)(),mint:(0,g.Yj)(),owner:(0,g.lq)((0,g.Yj)()),uiTokenAmount:dt}),Zt=(0,g.NW)({writable:(0,g.YO)(Oe),readonly:(0,g.YO)(Oe)}),Qt=(0,g.NW)({err:Xe,fee:(0,g.ai)(),innerInstructions:(0,g.lq)((0,g.me)((0,g.YO)((0,g.NW)({index:(0,g.ai)(),instructions:(0,g.YO)((0,g.NW)({accounts:(0,g.YO)((0,g.ai)()),data:(0,g.Yj)(),programIdIndex:(0,g.ai)()}))})))),preBalances:(0,g.YO)((0,g.ai)()),postBalances:(0,g.YO)((0,g.ai)()),logMessages:(0,g.lq)((0,g.me)((0,g.YO)((0,g.Yj)()))),preTokenBalances:(0,g.lq)((0,g.me)((0,g.YO)(Xt))),postTokenBalances:(0,g.lq)((0,g.me)((0,g.YO)(Xt))),loadedAddresses:(0,g.lq)(Zt),computeUnitsConsumed:(0,g.lq)((0,g.ai)())}),er=(0,g.NW)({err:Xe,fee:(0,g.ai)(),innerInstructions:(0,g.lq)((0,g.me)((0,g.YO)((0,g.NW)({index:(0,g.ai)(),instructions:(0,g.YO)(Jt)})))),preBalances:(0,g.YO)((0,g.ai)()),postBalances:(0,g.YO)((0,g.ai)()),logMessages:(0,g.lq)((0,g.me)((0,g.YO)((0,g.Yj)()))),preTokenBalances:(0,g.lq)((0,g.me)((0,g.YO)(Xt))),postTokenBalances:(0,g.lq)((0,g.me)((0,g.YO)(Xt))),loadedAddresses:(0,g.lq)(Zt),computeUnitsConsumed:(0,g.lq)((0,g.ai)())}),tr=(0,g.KC)([(0,g.eu)(0),(0,g.eu)("legacy")]),rr=(0,g.NW)({pubkey:(0,g.Yj)(),lamports:(0,g.ai)(),postBalance:(0,g.me)((0,g.ai)()),rewardType:(0,g.me)((0,g.Yj)()),commission:(0,g.lq)((0,g.me)((0,g.ai)()))}),ir=Ye((0,g.me)((0,g.NW)({blockhash:(0,g.Yj)(),previousBlockhash:(0,g.Yj)(),parentSlot:(0,g.ai)(),transactions:(0,g.YO)((0,g.NW)({transaction:Ht,meta:(0,g.me)(Qt),version:(0,g.lq)(tr)})),rewards:(0,g.lq)((0,g.YO)(rr)),blockTime:(0,g.me)((0,g.ai)()),blockHeight:(0,g.me)((0,g.ai)())}))),nr=Ye((0,g.me)((0,g.NW)({blockhash:(0,g.Yj)(),previousBlockhash:(0,g.Yj)(),parentSlot:(0,g.ai)(),rewards:(0,g.lq)((0,g.YO)(rr)),blockTime:(0,g.me)((0,g.ai)()),blockHeight:(0,g.me)((0,g.ai)())}))),sr=Ye((0,g.me)((0,g.NW)({blockhash:(0,g.Yj)(),previousBlockhash:(0,g.Yj)(),parentSlot:(0,g.ai)(),transactions:(0,g.YO)((0,g.NW)({transaction:Mt,meta:(0,g.me)(Qt),version:(0,g.lq)(tr)})),rewards:(0,g.lq)((0,g.YO)(rr)),blockTime:(0,g.me)((0,g.ai)()),blockHeight:(0,g.me)((0,g.ai)())}))),or=Ye((0,g.me)((0,g.NW)({blockhash:(0,g.Yj)(),previousBlockhash:(0,g.Yj)(),parentSlot:(0,g.ai)(),transactions:(0,g.YO)((0,g.NW)({transaction:Gt,meta:(0,g.me)(er),version:(0,g.lq)(tr)})),rewards:(0,g.lq)((0,g.YO)(rr)),blockTime:(0,g.me)((0,g.ai)()),blockHeight:(0,g.me)((0,g.ai)())}))),ar=Ye((0,g.me)((0,g.NW)({blockhash:(0,g.Yj)(),previousBlockhash:(0,g.Yj)(),parentSlot:(0,g.ai)(),transactions:(0,g.YO)((0,g.NW)({transaction:Mt,meta:(0,g.me)(er),version:(0,g.lq)(tr)})),rewards:(0,g.lq)((0,g.YO)(rr)),blockTime:(0,g.me)((0,g.ai)()),blockHeight:(0,g.me)((0,g.ai)())}))),cr=Ye((0,g.me)((0,g.NW)({blockhash:(0,g.Yj)(),previousBlockhash:(0,g.Yj)(),parentSlot:(0,g.ai)(),rewards:(0,g.lq)((0,g.YO)(rr)),blockTime:(0,g.me)((0,g.ai)()),blockHeight:(0,g.me)((0,g.ai)())}))),ur=Ye((0,g.me)((0,g.NW)({blockhash:(0,g.Yj)(),previousBlockhash:(0,g.Yj)(),parentSlot:(0,g.ai)(),transactions:(0,g.YO)((0,g.NW)({transaction:Ht,meta:(0,g.me)(Qt)})),rewards:(0,g.lq)((0,g.YO)(rr)),blockTime:(0,g.me)((0,g.ai)())}))),lr=Ye((0,g.me)((0,g.NW)({blockhash:(0,g.Yj)(),previousBlockhash:(0,g.Yj)(),parentSlot:(0,g.ai)(),signatures:(0,g.YO)((0,g.Yj)()),blockTime:(0,g.me)((0,g.ai)())}))),dr=Ye((0,g.me)((0,g.NW)({slot:(0,g.ai)(),meta:(0,g.me)(Qt),blockTime:(0,g.lq)((0,g.me)((0,g.ai)())),transaction:Ht,version:(0,g.lq)(tr)}))),hr=Ye((0,g.me)((0,g.NW)({slot:(0,g.ai)(),transaction:Gt,meta:(0,g.me)(er),blockTime:(0,g.lq)((0,g.me)((0,g.ai)())),version:(0,g.lq)(tr)}))),gr=je((0,g.NW)({blockhash:(0,g.Yj)(),feeCalculator:(0,g.NW)({lamportsPerSignature:(0,g.ai)()})})),pr=je((0,g.NW)({blockhash:(0,g.Yj)(),lastValidBlockHeight:(0,g.ai)()})),mr=je((0,g.zM)()),br=(0,g.NW)({slot:(0,g.ai)(),numTransactions:(0,g.ai)(),numSlots:(0,g.ai)(),samplePeriodSecs:(0,g.ai)()}),fr=Ye((0,g.YO)(br)),yr=je((0,g.me)((0,g.NW)({feeCalculator:(0,g.NW)({lamportsPerSignature:(0,g.ai)()})}))),wr=Ye((0,g.Yj)()),kr=Ye((0,g.Yj)()),Sr=(0,g.NW)({err:Xe,logs:(0,g.YO)((0,g.Yj)()),signature:(0,g.Yj)()}),Ir=(0,g.NW)({result:He(Sr),subscription:(0,g.ai)()}),vr={"solana-client":"js/0.0.0-development"};class Ar{constructor(e,t){let r,i,n,s,o,a;var c;this._commitment=void 0,this._confirmTransactionInitialTimeout=void 0,this._rpcEndpoint=void 0,this._rpcWsEndpoint=void 0,this._rpcClient=void 0,this._rpcRequest=void 0,this._rpcBatchRequest=void 0,this._rpcWebSocket=void 0,this._rpcWebSocketConnected=!1,this._rpcWebSocketHeartbeat=null,this._rpcWebSocketIdleTimeout=null,this._rpcWebSocketGeneration=0,this._disableBlockhashCaching=!1,this._pollingBlockhash=!1,this._blockhashInfo={latestBlockhash:null,lastFetch:0,transactionSignatures:[],simulatedSignatures:[]},this._nextClientSubscriptionId=0,this._subscriptionDisposeFunctionsByClientSubscriptionId={},this._subscriptionHashByClientSubscriptionId={},this._subscriptionStateChangeCallbacksByHash={},this._subscriptionCallbacksByServerSubscriptionId={},this._subscriptionsByHash={},this._subscriptionsAutoDisposedByRpc=new Set,this.getBlockHeight=(()=>{const e={};return async t=>{const{commitment:r,config:i}=qe(t),n=this._buildArgs([],r,void 0,i),s=Ae(n);return e[s]=e[s]??(async()=>{try{const e=await this._rpcRequest("getBlockHeight",n),t=(0,g.vt)(e,Ye((0,g.ai)()));if("error"in t)throw new Pe(t.error,"failed to get block height information");return t.result}finally{delete e[s]}})(),await e[s]}})(),t&&"string"==typeof t?this._commitment=t:t&&(this._commitment=t.commitment,this._confirmTransactionInitialTimeout=t.confirmTransactionInitialTimeout,r=t.wsEndpoint,i=t.httpHeaders,n=t.fetch,s=t.fetchMiddleware,o=t.disableRetryOnRateLimit,a=t.httpAgent),this._rpcEndpoint=function(e){if(!1===/^https?:/.test(e))throw new TypeError("Endpoint URL must start with `http:` or `https:`.");return e}(e),this._rpcWsEndpoint=r||function(e){const t=e.match(Te);if(null==t)throw TypeError(`Failed to validate endpoint URL \`${e}\``);const[r,i,n,s]=t,o=e.startsWith("https:")?"wss:":"ws:",a=null==n?null:parseInt(n.slice(1),10);return`${o}//${i}${null==a?"":`:${a+1}`}${s}`}(e),this._rpcClient=function(e,t,r,i,n,s){const o=r||xe;let a;return null!=s&&console.warn("You have supplied an `httpAgent` when creating a `Connection` in a browser environment.It has been ignored; `httpAgent` is only used in Node environments."),i&&(a=async(e,t)=>{const r=await new Promise(((r,n)=>{try{i(e,t,((e,t)=>r([e,t])))}catch(s){n(s)}}));return await o(...r)}),new(m())((async(r,i)=>{const s={method:"POST",body:r,agent:void 0,headers:Object.assign({"Content-Type":"application/json"},t||{},vr)};try{let t,r=5,c=500;for(;t=a?await a(e,s):await o(e,s),429===t.status&&!0!==n&&(r-=1,0!==r);)console.error(`Server responded with ${t.status} ${t.statusText}.  Retrying after ${c}ms delay...`),await ue(c),c*=2;const u=await t.text();t.ok?i(null,u):i(new Error(`${t.status} ${t.statusText}: ${u}`))}catch(c){c instanceof Error&&i(c)}}),{})}(e,i,n,s,o,a),this._rpcRequest=(c=this._rpcClient,(e,t)=>new Promise(((r,i)=>{c.request(e,t,((e,t)=>{e?i(e):r(t)}))}))),this._rpcBatchRequest=function(e){return t=>new Promise(((r,i)=>{0===t.length&&r([]);const n=t.map((t=>e.request(t.methodName,t.args)));e.request(n,((e,t)=>{e?i(e):r(t)}))}))}(this._rpcClient),this._rpcWebSocket=new Ce(this._rpcWsEndpoint,{autoconnect:!1,max_reconnects:1/0}),this._rpcWebSocket.on("open",this._wsOnOpen.bind(this)),this._rpcWebSocket.on("error",this._wsOnError.bind(this)),this._rpcWebSocket.on("close",this._wsOnClose.bind(this)),this._rpcWebSocket.on("accountNotification",this._wsOnAccountNotification.bind(this)),this._rpcWebSocket.on("programNotification",this._wsOnProgramAccountNotification.bind(this)),this._rpcWebSocket.on("slotNotification",this._wsOnSlotNotification.bind(this)),this._rpcWebSocket.on("slotsUpdatesNotification",this._wsOnSlotUpdatesNotification.bind(this)),this._rpcWebSocket.on("signatureNotification",this._wsOnSignatureNotification.bind(this)),this._rpcWebSocket.on("rootNotification",this._wsOnRootNotification.bind(this)),this._rpcWebSocket.on("logsNotification",this._wsOnLogsNotification.bind(this))}get commitment(){return this._commitment}get rpcEndpoint(){return this._rpcEndpoint}async getBalanceAndContext(e,t){const{commitment:r,config:i}=qe(t),n=this._buildArgs([e.toBase58()],r,void 0,i),s=await this._rpcRequest("getBalance",n),o=(0,g.vt)(s,je((0,g.ai)()));if("error"in o)throw new Pe(o.error,`failed to get balance for ${e.toBase58()}`);return o.result}async getBalance(e,t){return await this.getBalanceAndContext(e,t).then((e=>e.value)).catch((t=>{throw new Error("failed to get balance of account "+e.toBase58()+": "+t)}))}async getBlockTime(e){const t=await this._rpcRequest("getBlockTime",[e]),r=(0,g.vt)(t,Ye((0,g.me)((0,g.ai)())));if("error"in r)throw new Pe(r.error,`failed to get block time for slot ${e}`);return r.result}async getMinimumLedgerSlot(){const e=await this._rpcRequest("minimumLedgerSlot",[]),t=(0,g.vt)(e,Ye((0,g.ai)()));if("error"in t)throw new Pe(t.error,"failed to get minimum ledger slot");return t.result}async getFirstAvailableBlock(){const e=await this._rpcRequest("getFirstAvailableBlock",[]),t=(0,g.vt)(e,ut);if("error"in t)throw new Pe(t.error,"failed to get first available block");return t.result}async getSupply(e){let t={};t="string"==typeof e?{commitment:e}:e?{...e,commitment:e&&e.commitment||this.commitment}:{commitment:this.commitment};const r=await this._rpcRequest("getSupply",[t]),i=(0,g.vt)(r,lt);if("error"in i)throw new Pe(i.error,"failed to get supply");return i.result}async getTokenSupply(e,t){const r=this._buildArgs([e.toBase58()],t),i=await this._rpcRequest("getTokenSupply",r),n=(0,g.vt)(i,je(dt));if("error"in n)throw new Pe(n.error,"failed to get token supply");return n.result}async getTokenAccountBalance(e,t){const r=this._buildArgs([e.toBase58()],t),i=await this._rpcRequest("getTokenAccountBalance",r),n=(0,g.vt)(i,je(dt));if("error"in n)throw new Pe(n.error,"failed to get token account balance");return n.result}async getTokenAccountsByOwner(e,t,r){const{commitment:i,config:n}=qe(r);let s=[e.toBase58()];"mint"in t?s.push({mint:t.mint.toBase58()}):s.push({programId:t.programId.toBase58()});const o=this._buildArgs(s,i,"base64",n),a=await this._rpcRequest("getTokenAccountsByOwner",o),c=(0,g.vt)(a,gt);if("error"in c)throw new Pe(c.error,`failed to get token accounts owned by account ${e.toBase58()}`);return c.result}async getParsedTokenAccountsByOwner(e,t,r){let i=[e.toBase58()];"mint"in t?i.push({mint:t.mint.toBase58()}):i.push({programId:t.programId.toBase58()});const n=this._buildArgs(i,r,"jsonParsed"),s=await this._rpcRequest("getTokenAccountsByOwner",n),o=(0,g.vt)(s,mt);if("error"in o)throw new Pe(o.error,`failed to get token accounts owned by account ${e.toBase58()}`);return o.result}async getLargestAccounts(e){const t={...e,commitment:e&&e.commitment||this.commitment},r=t.filter||t.commitment?[t]:[],i=await this._rpcRequest("getLargestAccounts",r),n=(0,g.vt)(i,bt);if("error"in n)throw new Pe(n.error,"failed to get largest accounts");return n.result}async getTokenLargestAccounts(e,t){const r=this._buildArgs([e.toBase58()],t),i=await this._rpcRequest("getTokenLargestAccounts",r),n=(0,g.vt)(i,ht);if("error"in n)throw new Pe(n.error,"failed to get token largest accounts");return n.result}async getAccountInfoAndContext(e,t){const{commitment:r,config:i}=qe(t),n=this._buildArgs([e.toBase58()],r,"base64",i),s=await this._rpcRequest("getAccountInfo",n),o=(0,g.vt)(s,je((0,g.me)(ft)));if("error"in o)throw new Pe(o.error,`failed to get info about account ${e.toBase58()}`);return o.result}async getParsedAccountInfo(e,t){const{commitment:r,config:i}=qe(t),n=this._buildArgs([e.toBase58()],r,"jsonParsed",i),s=await this._rpcRequest("getAccountInfo",n),o=(0,g.vt)(s,je((0,g.me)(kt)));if("error"in o)throw new Pe(o.error,`failed to get info about account ${e.toBase58()}`);return o.result}async getAccountInfo(e,t){try{return(await this.getAccountInfoAndContext(e,t)).value}catch(r){throw new Error("failed to get info about account "+e.toBase58()+": "+r)}}async getMultipleParsedAccounts(e,t){const{commitment:r,config:i}=qe(t),n=e.map((e=>e.toBase58())),s=this._buildArgs([n],r,"jsonParsed",i),o=await this._rpcRequest("getMultipleAccounts",s),a=(0,g.vt)(o,je((0,g.YO)((0,g.me)(kt))));if("error"in a)throw new Pe(a.error,`failed to get info for accounts ${n}`);return a.result}async getMultipleAccountsInfoAndContext(e,t){const{commitment:r,config:i}=qe(t),n=e.map((e=>e.toBase58())),s=this._buildArgs([n],r,"base64",i),o=await this._rpcRequest("getMultipleAccounts",s),a=(0,g.vt)(o,je((0,g.YO)((0,g.me)(ft))));if("error"in a)throw new Pe(a.error,`failed to get info for accounts ${n}`);return a.result}async getMultipleAccountsInfo(e,t){return(await this.getMultipleAccountsInfoAndContext(e,t)).value}async getStakeActivation(e,t,r){const{commitment:i,config:n}=qe(t),s=this._buildArgs([e.toBase58()],i,void 0,{...n,epoch:null!=r?r:n?.epoch}),o=await this._rpcRequest("getStakeActivation",s),a=(0,g.vt)(o,Ye(It));if("error"in a)throw new Pe(a.error,`failed to get Stake Activation ${e.toBase58()}`);return a.result}async getProgramAccounts(e,t){const{commitment:r,config:i}=qe(t),{encoding:n,...s}=i||{},o=this._buildArgs([e.toBase58()],r,n||"base64",s),a=await this._rpcRequest("getProgramAccounts",o),c=(0,g.YO)(yt),u=!0===s.withContext?(0,g.vt)(a,je(c)):(0,g.vt)(a,Ye(c));if("error"in u)throw new Pe(u.error,`failed to get accounts owned by program ${e.toBase58()}`);return u.result}async getParsedProgramAccounts(e,t){const{commitment:r,config:i}=qe(t),n=this._buildArgs([e.toBase58()],r,"jsonParsed",i),s=await this._rpcRequest("getProgramAccounts",n),o=(0,g.vt)(s,Ye((0,g.YO)(St)));if("error"in o)throw new Pe(o.error,`failed to get accounts owned by program ${e.toBase58()}`);return o.result}async confirmTransaction(e,t){let r,i;if("string"==typeof e)r=e;else{const t=e;if(t.abortSignal?.aborted)return Promise.reject(t.abortSignal.reason);r=t.signature}try{i=c().decode(r)}catch(n){throw new Error("signature must be base58 encoded: "+r)}return U(64===i.length,"signature has invalid length"),"string"==typeof e?await this.confirmTransactionUsingLegacyTimeoutStrategy({commitment:t||this.commitment,signature:r}):"lastValidBlockHeight"in e?await this.confirmTransactionUsingBlockHeightExceedanceStrategy({commitment:t||this.commitment,strategy:e}):await this.confirmTransactionUsingDurableNonceStrategy({commitment:t||this.commitment,strategy:e})}getCancellationPromise(e){return new Promise(((t,r)=>{null!=e&&(e.aborted?r(e.reason):e.addEventListener("abort",(()=>{r(e.reason)})))}))}getTransactionConfirmationPromise({commitment:e,signature:t}){let r,i,n=!1;return{abortConfirmation:()=>{i&&(i(),i=void 0),null!=r&&(this.removeSignatureListener(r),r=void 0)},confirmationPromise:new Promise(((s,o)=>{try{r=this.onSignature(t,((e,t)=>{r=void 0;const i={context:t,value:e};s({__type:Q.PROCESSED,response:i})}),e);const a=new Promise((e=>{null==r?e():i=this._onSubscriptionStateChange(r,(t=>{"subscribed"===t&&e()}))}));(async()=>{if(await a,n)return;const r=await this.getSignatureStatus(t);if(n)return;if(null==r)return;const{context:i,value:c}=r;if(null!=c)if(c?.err)o(c.err);else{switch(e){case"confirmed":case"single":case"singleGossip":if("processed"===c.confirmationStatus)return;break;case"finalized":case"max":case"root":if("processed"===c.confirmationStatus||"confirmed"===c.confirmationStatus)return}n=!0,s({__type:Q.PROCESSED,response:{context:i,value:c}})}})()}catch(a){o(a)}}))}}async confirmTransactionUsingBlockHeightExceedanceStrategy({commitment:e,strategy:{abortSignal:t,lastValidBlockHeight:r,signature:i}}){let n=!1;const s=new Promise((t=>{const i=async()=>{try{return await this.getBlockHeight(e)}catch(t){return-1}};(async()=>{let e=await i();if(!n){for(;e<=r;){if(await ue(1e3),n)return;if(e=await i(),n)return}t({__type:Q.BLOCKHEIGHT_EXCEEDED})}})()})),{abortConfirmation:o,confirmationPromise:a}=this.getTransactionConfirmationPromise({commitment:e,signature:i}),c=this.getCancellationPromise(t);let u;try{const e=await Promise.race([c,a,s]);if(e.__type!==Q.PROCESSED)throw new z(i);u=e.response}finally{n=!0,o()}return u}async confirmTransactionUsingDurableNonceStrategy({commitment:e,strategy:{abortSignal:t,minContextSlot:r,nonceAccountPubkey:i,nonceValue:n,signature:s}}){let o=!1;const a=new Promise((t=>{let s=n,a=null;const c=async()=>{try{const{context:t,value:n}=await this.getNonceAndContext(i,{commitment:e,minContextSlot:r});return a=t.slot,n?.nonce}catch(t){return s}};(async()=>{if(s=await c(),!o)for(;;){if(n!==s)return void t({__type:Q.NONCE_INVALID,slotInWhichNonceDidAdvance:a});if(await ue(2e3),o)return;if(s=await c(),o)return}})()})),{abortConfirmation:c,confirmationPromise:u}=this.getTransactionConfirmationPromise({commitment:e,signature:s}),l=this.getCancellationPromise(t);let d;try{const t=await Promise.race([l,u,a]);if(t.__type===Q.PROCESSED)d=t.response;else{let i;for(;;){const e=await this.getSignatureStatus(s);if(null==e)break;if(!(e.context.slot<(t.slotInWhichNonceDidAdvance??r))){i=e;break}await ue(400)}if(!i?.value)throw new q(s);{const t=e||"finalized",{confirmationStatus:r}=i.value;switch(t){case"processed":case"recent":if("processed"!==r&&"confirmed"!==r&&"finalized"!==r)throw new q(s);break;case"confirmed":case"single":case"singleGossip":if("confirmed"!==r&&"finalized"!==r)throw new q(s);break;case"finalized":case"max":case"root":if("finalized"!==r)throw new q(s)}d={context:i.context,value:{err:i.value.err}}}}}finally{o=!0,c()}return d}async confirmTransactionUsingLegacyTimeoutStrategy({commitment:e,signature:t}){let r;const i=new Promise((t=>{let i=this._confirmTransactionInitialTimeout||6e4;switch(e){case"processed":case"recent":case"single":case"confirmed":case"singleGossip":i=this._confirmTransactionInitialTimeout||3e4}r=setTimeout((()=>t({__type:Q.TIMED_OUT,timeoutMs:i})),i)})),{abortConfirmation:n,confirmationPromise:s}=this.getTransactionConfirmationPromise({commitment:e,signature:t});let o;try{const e=await Promise.race([s,i]);if(e.__type!==Q.PROCESSED)throw new K(t,e.timeoutMs/1e3);o=e.response}finally{clearTimeout(r),n()}return o}async getClusterNodes(){const e=await this._rpcRequest("getClusterNodes",[]),t=(0,g.vt)(e,Ye((0,g.YO)(Ot)));if("error"in t)throw new Pe(t.error,"failed to get cluster nodes");return t.result}async getVoteAccounts(e){const t=this._buildArgs([],e),r=await this._rpcRequest("getVoteAccounts",t),i=(0,g.vt)(r,Kt);if("error"in i)throw new Pe(i.error,"failed to get vote accounts");return i.result}async getSlot(e){const{commitment:t,config:r}=qe(e),i=this._buildArgs([],t,void 0,r),n=await this._rpcRequest("getSlot",i),s=(0,g.vt)(n,Ye((0,g.ai)()));if("error"in s)throw new Pe(s.error,"failed to get slot");return s.result}async getSlotLeader(e){const{commitment:t,config:r}=qe(e),i=this._buildArgs([],t,void 0,r),n=await this._rpcRequest("getSlotLeader",i),s=(0,g.vt)(n,Ye((0,g.Yj)()));if("error"in s)throw new Pe(s.error,"failed to get slot leader");return s.result}async getSlotLeaders(e,t){const r=[e,t],i=await this._rpcRequest("getSlotLeaders",r),n=(0,g.vt)(i,Ye((0,g.YO)(Oe)));if("error"in n)throw new Pe(n.error,"failed to get slot leaders");return n.result}async getSignatureStatus(e,t){const{context:r,value:i}=await this.getSignatureStatuses([e],t);U(1===i.length);return{context:r,value:i[0]}}async getSignatureStatuses(e,t){const r=[e];t&&r.push(t);const i=await this._rpcRequest("getSignatureStatuses",r),n=(0,g.vt)(i,Rt);if("error"in n)throw new Pe(n.error,"failed to get signature status");return n.result}async getTransactionCount(e){const{commitment:t,config:r}=qe(e),i=this._buildArgs([],t,void 0,r),n=await this._rpcRequest("getTransactionCount",i),s=(0,g.vt)(n,Ye((0,g.ai)()));if("error"in s)throw new Pe(s.error,"failed to get transaction count");return s.result}async getTotalSupply(e){return(await this.getSupply({commitment:e,excludeNonCirculatingAccountsList:!0})).value.total}async getInflationGovernor(e){const t=this._buildArgs([],e),r=await this._rpcRequest("getInflationGovernor",t),i=(0,g.vt)(r,it);if("error"in i)throw new Pe(i.error,"failed to get inflation");return i.result}async getInflationReward(e,t,r){const{commitment:i,config:n}=qe(r),s=this._buildArgs([e.map((e=>e.toBase58()))],i,void 0,{...n,epoch:null!=t?t:n?.epoch}),o=await this._rpcRequest("getInflationReward",s),a=(0,g.vt)(o,Ue);if("error"in a)throw new Pe(a.error,"failed to get inflation reward");return a.result}async getInflationRate(){const e=await this._rpcRequest("getInflationRate",[]),t=(0,g.vt)(e,nt);if("error"in t)throw new Pe(t.error,"failed to get inflation rate");return t.result}async getEpochInfo(e){const{commitment:t,config:r}=qe(e),i=this._buildArgs([],t,void 0,r),n=await this._rpcRequest("getEpochInfo",i),s=(0,g.vt)(n,ot);if("error"in s)throw new Pe(s.error,"failed to get epoch info");return s.result}async getEpochSchedule(){const e=await this._rpcRequest("getEpochSchedule",[]),t=(0,g.vt)(e,at);if("error"in t)throw new Pe(t.error,"failed to get epoch schedule");const r=t.result;return new Be(r.slotsPerEpoch,r.leaderScheduleSlotOffset,r.warmup,r.firstNormalEpoch,r.firstNormalSlot)}async getLeaderSchedule(){const e=await this._rpcRequest("getLeaderSchedule",[]),t=(0,g.vt)(e,ct);if("error"in t)throw new Pe(t.error,"failed to get leader schedule");return t.result}async getMinimumBalanceForRentExemption(e,t){const r=this._buildArgs([e],t),i=await this._rpcRequest("getMinimumBalanceForRentExemption",r),n=(0,g.vt)(i,Yt);return"error"in n?(console.warn("Unable to fetch minimum balance for rent exemption"),0):n.result}async getRecentBlockhashAndContext(e){const t=this._buildArgs([],e),r=await this._rpcRequest("getRecentBlockhash",t),i=(0,g.vt)(r,gr);if("error"in i)throw new Pe(i.error,"failed to get recent blockhash");return i.result}async getRecentPerformanceSamples(e){const t=await this._rpcRequest("getRecentPerformanceSamples",e?[e]:[]),r=(0,g.vt)(t,fr);if("error"in r)throw new Pe(r.error,"failed to get recent performance samples");return r.result}async getFeeCalculatorForBlockhash(e,t){const r=this._buildArgs([e],t),i=await this._rpcRequest("getFeeCalculatorForBlockhash",r),n=(0,g.vt)(i,yr);if("error"in n)throw new Pe(n.error,"failed to get fee calculator");const{context:s,value:o}=n.result;return{context:s,value:null!==o?o.feeCalculator:null}}async getFeeForMessage(e,t){const r=_(e.serialize()).toString("base64"),i=this._buildArgs([r],t),n=await this._rpcRequest("getFeeForMessage",i),s=(0,g.vt)(n,je((0,g.me)((0,g.ai)())));if("error"in s)throw new Pe(s.error,"failed to get fee for message");if(null===s.result)throw new Error("invalid blockhash");return s.result}async getRecentPrioritizationFees(e){const t=e?.lockedWritableAccounts?.map((e=>e.toBase58())),r=t?.length?[t]:[],i=await this._rpcRequest("getRecentPrioritizationFees",r),n=(0,g.vt)(i,st);if("error"in n)throw new Pe(n.error,"failed to get recent prioritization fees");return n.result}async getRecentBlockhash(e){try{return(await this.getRecentBlockhashAndContext(e)).value}catch(t){throw new Error("failed to get recent blockhash: "+t)}}async getLatestBlockhash(e){try{return(await this.getLatestBlockhashAndContext(e)).value}catch(t){throw new Error("failed to get recent blockhash: "+t)}}async getLatestBlockhashAndContext(e){const{commitment:t,config:r}=qe(e),i=this._buildArgs([],t,void 0,r),n=await this._rpcRequest("getLatestBlockhash",i),s=(0,g.vt)(n,pr);if("error"in s)throw new Pe(s.error,"failed to get latest blockhash");return s.result}async isBlockhashValid(e,t){const{commitment:r,config:i}=qe(t),n=this._buildArgs([e],r,void 0,i),s=await this._rpcRequest("isBlockhashValid",n),o=(0,g.vt)(s,mr);if("error"in o)throw new Pe(o.error,"failed to determine if the blockhash `"+e+"`is valid");return o.result}async getVersion(){const e=await this._rpcRequest("getVersion",[]),t=(0,g.vt)(e,Ye(et));if("error"in t)throw new Pe(t.error,"failed to get version");return t.result}async getGenesisHash(){const e=await this._rpcRequest("getGenesisHash",[]),t=(0,g.vt)(e,Ye((0,g.Yj)()));if("error"in t)throw new Pe(t.error,"failed to get genesis hash");return t.result}async getBlock(e,t){const{commitment:r,config:i}=qe(t),n=this._buildArgsAtLeastConfirmed([e],r,void 0,i),s=await this._rpcRequest("getBlock",n);try{switch(i?.transactionDetails){case"accounts":{const e=(0,g.vt)(s,sr);if("error"in e)throw e.error;return e.result}case"none":{const e=(0,g.vt)(s,nr);if("error"in e)throw e.error;return e.result}default:{const e=(0,g.vt)(s,ir);if("error"in e)throw e.error;const{result:t}=e;return t?{...t,transactions:t.transactions.map((({transaction:e,meta:t,version:r})=>({meta:t,transaction:{...e,message:De(r,e.message)},version:r})))}:null}}}catch(o){throw new Pe(o,"failed to get confirmed block")}}async getParsedBlock(e,t){const{commitment:r,config:i}=qe(t),n=this._buildArgsAtLeastConfirmed([e],r,"jsonParsed",i),s=await this._rpcRequest("getBlock",n);try{switch(i?.transactionDetails){case"accounts":{const e=(0,g.vt)(s,ar);if("error"in e)throw e.error;return e.result}case"none":{const e=(0,g.vt)(s,cr);if("error"in e)throw e.error;return e.result}default:{const e=(0,g.vt)(s,or);if("error"in e)throw e.error;return e.result}}}catch(o){throw new Pe(o,"failed to get block")}}async getBlockProduction(e){let t,r;if("string"==typeof e)r=e;else if(e){const{commitment:i,...n}=e;r=i,t=n}const i=this._buildArgs([],r,"base64",t),n=await this._rpcRequest("getBlockProduction",i),s=(0,g.vt)(n,rt);if("error"in s)throw new Pe(s.error,"failed to get block production information");return s.result}async getTransaction(e,t){const{commitment:r,config:i}=qe(t),n=this._buildArgsAtLeastConfirmed([e],r,void 0,i),s=await this._rpcRequest("getTransaction",n),o=(0,g.vt)(s,dr);if("error"in o)throw new Pe(o.error,"failed to get transaction");const a=o.result;return a?{...a,transaction:{...a.transaction,message:De(a.version,a.transaction.message)}}:a}async getParsedTransaction(e,t){const{commitment:r,config:i}=qe(t),n=this._buildArgsAtLeastConfirmed([e],r,"jsonParsed",i),s=await this._rpcRequest("getTransaction",n),o=(0,g.vt)(s,hr);if("error"in o)throw new Pe(o.error,"failed to get transaction");return o.result}async getParsedTransactions(e,t){const{commitment:r,config:i}=qe(t),n=e.map((e=>({methodName:"getTransaction",args:this._buildArgsAtLeastConfirmed([e],r,"jsonParsed",i)})));return(await this._rpcBatchRequest(n)).map((e=>{const t=(0,g.vt)(e,hr);if("error"in t)throw new Pe(t.error,"failed to get transactions");return t.result}))}async getTransactions(e,t){const{commitment:r,config:i}=qe(t),n=e.map((e=>({methodName:"getTransaction",args:this._buildArgsAtLeastConfirmed([e],r,void 0,i)})));return(await this._rpcBatchRequest(n)).map((e=>{const t=(0,g.vt)(e,dr);if("error"in t)throw new Pe(t.error,"failed to get transactions");const r=t.result;return r?{...r,transaction:{...r.transaction,message:De(r.version,r.transaction.message)}}:r}))}async getConfirmedBlock(e,t){const r=this._buildArgsAtLeastConfirmed([e],t),i=await this._rpcRequest("getConfirmedBlock",r),n=(0,g.vt)(i,ur);if("error"in n)throw new Pe(n.error,"failed to get confirmed block");const s=n.result;if(!s)throw new Error("Confirmed block "+e+" not found");const o={...s,transactions:s.transactions.map((({transaction:e,meta:t})=>{const r=new G(e.message);return{meta:t,transaction:{...e,message:r}}}))};return{...o,transactions:o.transactions.map((({transaction:e,meta:t})=>({meta:t,transaction:re.populate(e.message,e.signatures)})))}}async getBlocks(e,t,r){const i=this._buildArgsAtLeastConfirmed(void 0!==t?[e,t]:[e],r),n=await this._rpcRequest("getBlocks",i),s=(0,g.vt)(n,Ye((0,g.YO)((0,g.ai)())));if("error"in s)throw new Pe(s.error,"failed to get blocks");return s.result}async getBlockSignatures(e,t){const r=this._buildArgsAtLeastConfirmed([e],t,void 0,{transactionDetails:"signatures",rewards:!1}),i=await this._rpcRequest("getBlock",r),n=(0,g.vt)(i,lr);if("error"in n)throw new Pe(n.error,"failed to get block");const s=n.result;if(!s)throw new Error("Block "+e+" not found");return s}async getConfirmedBlockSignatures(e,t){const r=this._buildArgsAtLeastConfirmed([e],t,void 0,{transactionDetails:"signatures",rewards:!1}),i=await this._rpcRequest("getConfirmedBlock",r),n=(0,g.vt)(i,lr);if("error"in n)throw new Pe(n.error,"failed to get confirmed block");const s=n.result;if(!s)throw new Error("Confirmed block "+e+" not found");return s}async getConfirmedTransaction(e,t){const r=this._buildArgsAtLeastConfirmed([e],t),i=await this._rpcRequest("getConfirmedTransaction",r),n=(0,g.vt)(i,dr);if("error"in n)throw new Pe(n.error,"failed to get transaction");const s=n.result;if(!s)return s;const o=new G(s.transaction.message),a=s.transaction.signatures;return{...s,transaction:re.populate(o,a)}}async getParsedConfirmedTransaction(e,t){const r=this._buildArgsAtLeastConfirmed([e],t,"jsonParsed"),i=await this._rpcRequest("getConfirmedTransaction",r),n=(0,g.vt)(i,hr);if("error"in n)throw new Pe(n.error,"failed to get confirmed transaction");return n.result}async getParsedConfirmedTransactions(e,t){const r=e.map((e=>({methodName:"getConfirmedTransaction",args:this._buildArgsAtLeastConfirmed([e],t,"jsonParsed")})));return(await this._rpcBatchRequest(r)).map((e=>{const t=(0,g.vt)(e,hr);if("error"in t)throw new Pe(t.error,"failed to get confirmed transactions");return t.result}))}async getConfirmedSignaturesForAddress(e,t,r){let i={},n=await this.getFirstAvailableBlock();for(;!("until"in i)&&!(--t<=0||t<n);)try{const e=await this.getConfirmedBlockSignatures(t,"finalized");e.signatures.length>0&&(i.until=e.signatures[e.signatures.length-1].toString())}catch(o){if(o instanceof Error&&o.message.includes("skipped"))continue;throw o}let s=await this.getSlot("finalized");for(;!("before"in i||++r>s);)try{const e=await this.getConfirmedBlockSignatures(r);e.signatures.length>0&&(i.before=e.signatures[e.signatures.length-1].toString())}catch(o){if(o instanceof Error&&o.message.includes("skipped"))continue;throw o}return(await this.getConfirmedSignaturesForAddress2(e,i)).map((e=>e.signature))}async getConfirmedSignaturesForAddress2(e,t,r){const i=this._buildArgsAtLeastConfirmed([e.toBase58()],r,void 0,t),n=await this._rpcRequest("getConfirmedSignaturesForAddress2",i),s=(0,g.vt)(n,vt);if("error"in s)throw new Pe(s.error,"failed to get confirmed signatures for address");return s.result}async getSignaturesForAddress(e,t,r){const i=this._buildArgsAtLeastConfirmed([e.toBase58()],r,void 0,t),n=await this._rpcRequest("getSignaturesForAddress",i),s=(0,g.vt)(n,At);if("error"in s)throw new Pe(s.error,"failed to get signatures for address");return s.result}async getAddressLookupTable(e,t){const{context:r,value:i}=await this.getAccountInfoAndContext(e,t);let n=null;return null!==i&&(n=new Ne({key:e,state:Ne.deserialize(i.data)})),{context:r,value:n}}async getNonceAndContext(e,t){const{context:r,value:i}=await this.getAccountInfoAndContext(e,t);let n=null;return null!==i&&(n=pe.fromAccountData(i.data)),{context:r,value:n}}async getNonce(e,t){return await this.getNonceAndContext(e,t).then((e=>e.value)).catch((t=>{throw new Error("failed to get nonce for account "+e.toBase58()+": "+t)}))}async requestAirdrop(e,t){const r=await this._rpcRequest("requestAirdrop",[e.toBase58(),t]),i=(0,g.vt)(r,wr);if("error"in i)throw new Pe(i.error,`airdrop to ${e.toBase58()} failed`);return i.result}async _blockhashWithExpiryBlockHeight(e){if(!e){for(;this._pollingBlockhash;)await ue(100);const e=Date.now()-this._blockhashInfo.lastFetch>=3e4;if(null!==this._blockhashInfo.latestBlockhash&&!e)return this._blockhashInfo.latestBlockhash}return await this._pollNewBlockhash()}async _pollNewBlockhash(){this._pollingBlockhash=!0;try{const e=Date.now(),t=this._blockhashInfo.latestBlockhash,r=t?t.blockhash:null;for(let i=0;i<50;i++){const e=await this.getLatestBlockhash("finalized");if(r!==e.blockhash)return this._blockhashInfo={latestBlockhash:e,lastFetch:Date.now(),transactionSignatures:[],simulatedSignatures:[]},e;await ue(200)}throw new Error(`Unable to obtain a new blockhash after ${Date.now()-e}ms`)}finally{this._pollingBlockhash=!1}}async getStakeMinimumDelegation(e){const{commitment:t,config:r}=qe(e),i=this._buildArgs([],t,"base64",r),n=await this._rpcRequest("getStakeMinimumDelegation",i),s=(0,g.vt)(n,je((0,g.ai)()));if("error"in s)throw new Pe(s.error,"failed to get stake minimum delegation");return s.result}async simulateTransaction(e,t,r){if("message"in e){const n=e.serialize(),s=i.Buffer.from(n).toString("base64");if(Array.isArray(t)||void 0!==r)throw new Error("Invalid arguments");const o=t||{};o.encoding="base64","commitment"in o||(o.commitment=this.commitment);const a=[s,o],c=await this._rpcRequest("simulateTransaction",a),u=(0,g.vt)(c,tt);if("error"in u)throw new Error("failed to simulate transaction: "+u.error.message);return u.result}let n;if(e instanceof re){let t=e;n=new re,n.feePayer=t.feePayer,n.instructions=e.instructions,n.nonceInfo=t.nonceInfo,n.signatures=t.signatures}else n=re.populate(e),n._message=n._json=void 0;if(void 0!==t&&!Array.isArray(t))throw new Error("Invalid arguments");const s=t;if(n.nonceInfo&&s)n.sign(...s);else{let e=this._disableBlockhashCaching;for(;;){const t=await this._blockhashWithExpiryBlockHeight(e);if(n.lastValidBlockHeight=t.lastValidBlockHeight,n.recentBlockhash=t.blockhash,!s)break;if(n.sign(...s),!n.signature)throw new Error("!signature");const r=n.signature.toString("base64");if(!this._blockhashInfo.simulatedSignatures.includes(r)&&!this._blockhashInfo.transactionSignatures.includes(r)){this._blockhashInfo.simulatedSignatures.push(r);break}e=!0}}const o=n._compile(),a=o.serialize(),c=n._serialize(a).toString("base64"),u={encoding:"base64",commitment:this.commitment};if(r){const e=(Array.isArray(r)?r:o.nonProgramIds()).map((e=>e.toBase58()));u.accounts={encoding:"base64",addresses:e}}s&&(u.sigVerify=!0);const l=[c,u],d=await this._rpcRequest("simulateTransaction",l),h=(0,g.vt)(d,tt);if("error"in h){let e;if("data"in h.error&&(e=h.error.data.logs,e&&Array.isArray(e))){const t="\n    ",r=t+e.join(t);console.error(h.error.message,r)}throw new We("failed to simulate transaction: "+h.error.message,e)}return h.result}async sendTransaction(e,t,r){if("version"in e){if(t&&Array.isArray(t))throw new Error("Invalid arguments");const r=e.serialize();return await this.sendRawTransaction(r,t)}if(void 0===t||!Array.isArray(t))throw new Error("Invalid arguments");const i=t;if(e.nonceInfo)e.sign(...i);else{let t=this._disableBlockhashCaching;for(;;){const r=await this._blockhashWithExpiryBlockHeight(t);if(e.lastValidBlockHeight=r.lastValidBlockHeight,e.recentBlockhash=r.blockhash,e.sign(...i),!e.signature)throw new Error("!signature");const n=e.signature.toString("base64");if(!this._blockhashInfo.transactionSignatures.includes(n)){this._blockhashInfo.transactionSignatures.push(n);break}t=!0}}const n=e.serialize();return await this.sendRawTransaction(n,r)}async sendRawTransaction(e,t){const r=_(e).toString("base64");return await this.sendEncodedTransaction(r,t)}async sendEncodedTransaction(e,t){const r={encoding:"base64"},i=t&&t.skipPreflight,n=!0===i?"processed":t&&t.preflightCommitment||this.commitment;t&&null!=t.maxRetries&&(r.maxRetries=t.maxRetries),t&&null!=t.minContextSlot&&(r.minContextSlot=t.minContextSlot),i&&(r.skipPreflight=i),n&&(r.preflightCommitment=n);const s=[e,r],o=await this._rpcRequest("sendTransaction",s),a=(0,g.vt)(o,kr);if("error"in a){let e;throw"data"in a.error&&(e=a.error.data.logs),new We("failed to send transaction: "+a.error.message,e)}return a.result}_wsOnOpen(){this._rpcWebSocketConnected=!0,this._rpcWebSocketHeartbeat=setInterval((()=>{(async()=>{try{await this._rpcWebSocket.notify("ping")}catch{}})()}),5e3),this._updateSubscriptions()}_wsOnError(e){this._rpcWebSocketConnected=!1,console.error("ws error:",e.message)}_wsOnClose(e){this._rpcWebSocketConnected=!1,this._rpcWebSocketGeneration=(this._rpcWebSocketGeneration+1)%Number.MAX_SAFE_INTEGER,this._rpcWebSocketIdleTimeout&&(clearTimeout(this._rpcWebSocketIdleTimeout),this._rpcWebSocketIdleTimeout=null),this._rpcWebSocketHeartbeat&&(clearInterval(this._rpcWebSocketHeartbeat),this._rpcWebSocketHeartbeat=null),1e3!==e?(this._subscriptionCallbacksByServerSubscriptionId={},Object.entries(this._subscriptionsByHash).forEach((([e,t])=>{this._setSubscription(e,{...t,state:"pending"})}))):this._updateSubscriptions()}_setSubscription(e,t){const r=this._subscriptionsByHash[e]?.state;if(this._subscriptionsByHash[e]=t,r!==t.state){const r=this._subscriptionStateChangeCallbacksByHash[e];r&&r.forEach((e=>{try{e(t.state)}catch{}}))}}_onSubscriptionStateChange(e,t){const r=this._subscriptionHashByClientSubscriptionId[e];if(null==r)return()=>{};const i=this._subscriptionStateChangeCallbacksByHash[r]||=new Set;return i.add(t),()=>{i.delete(t),0===i.size&&delete this._subscriptionStateChangeCallbacksByHash[r]}}async _updateSubscriptions(){if(0===Object.keys(this._subscriptionsByHash).length)return void(this._rpcWebSocketConnected&&(this._rpcWebSocketConnected=!1,this._rpcWebSocketIdleTimeout=setTimeout((()=>{this._rpcWebSocketIdleTimeout=null;try{this._rpcWebSocket.close()}catch(e){e instanceof Error&&console.log(`Error when closing socket connection: ${e.message}`)}}),500)));if(null!==this._rpcWebSocketIdleTimeout&&(clearTimeout(this._rpcWebSocketIdleTimeout),this._rpcWebSocketIdleTimeout=null,this._rpcWebSocketConnected=!0),!this._rpcWebSocketConnected)return void this._rpcWebSocket.connect();const e=this._rpcWebSocketGeneration,t=()=>e===this._rpcWebSocketGeneration;await Promise.all(Object.keys(this._subscriptionsByHash).map((async e=>{const r=this._subscriptionsByHash[e];if(void 0!==r)switch(r.state){case"pending":case"unsubscribed":if(0===r.callbacks.size)return delete this._subscriptionsByHash[e],"unsubscribed"===r.state&&delete this._subscriptionCallbacksByServerSubscriptionId[r.serverSubscriptionId],void await this._updateSubscriptions();await(async()=>{const{args:i,method:n}=r;try{this._setSubscription(e,{...r,state:"subscribing"});const t=await this._rpcWebSocket.call(n,i);this._setSubscription(e,{...r,serverSubscriptionId:t,state:"subscribed"}),this._subscriptionCallbacksByServerSubscriptionId[t]=r.callbacks,await this._updateSubscriptions()}catch(s){if(s instanceof Error&&console.error(`${n} error for argument`,i,s.message),!t())return;this._setSubscription(e,{...r,state:"pending"}),await this._updateSubscriptions()}})();break;case"subscribed":0===r.callbacks.size&&await(async()=>{const{serverSubscriptionId:i,unsubscribeMethod:n}=r;if(this._subscriptionsAutoDisposedByRpc.has(i))this._subscriptionsAutoDisposedByRpc.delete(i);else{this._setSubscription(e,{...r,state:"unsubscribing"}),this._setSubscription(e,{...r,state:"unsubscribing"});try{await this._rpcWebSocket.call(n,[i])}catch(s){if(s instanceof Error&&console.error(`${n} error:`,s.message),!t())return;return this._setSubscription(e,{...r,state:"subscribed"}),void await this._updateSubscriptions()}}this._setSubscription(e,{...r,state:"unsubscribed"}),await this._updateSubscriptions()})()}})))}_handleServerNotification(e,t){const r=this._subscriptionCallbacksByServerSubscriptionId[e];void 0!==r&&r.forEach((e=>{try{e(...t)}catch(r){console.error(r)}}))}_wsOnAccountNotification(e){const{result:t,subscription:r}=(0,g.vt)(e,_t);this._handleServerNotification(r,[t.value,t.context])}_makeSubscription(e,t){const r=this._nextClientSubscriptionId++,i=Ae([e.method,t],!0),n=this._subscriptionsByHash[i];return void 0===n?this._subscriptionsByHash[i]={...e,args:t,callbacks:new Set([e.callback]),state:"pending"}:n.callbacks.add(e.callback),this._subscriptionHashByClientSubscriptionId[r]=i,this._subscriptionDisposeFunctionsByClientSubscriptionId[r]=async()=>{delete this._subscriptionDisposeFunctionsByClientSubscriptionId[r],delete this._subscriptionHashByClientSubscriptionId[r];const t=this._subscriptionsByHash[i];U(void 0!==t,`Could not find a \`Subscription\` when tearing down client subscription #${r}`),t.callbacks.delete(e.callback),await this._updateSubscriptions()},this._updateSubscriptions(),r}onAccountChange(e,t,r){const i=this._buildArgs([e.toBase58()],r||this._commitment||"finalized","base64");return this._makeSubscription({callback:t,method:"accountSubscribe",unsubscribeMethod:"accountUnsubscribe"},i)}async removeAccountChangeListener(e){await this._unsubscribeClientSubscription(e,"account change")}_wsOnProgramAccountNotification(e){const{result:t,subscription:r}=(0,g.vt)(e,Wt);this._handleServerNotification(r,[{accountId:t.value.pubkey,accountInfo:t.value.account},t.context])}onProgramAccountChange(e,t,r,i){const n=this._buildArgs([e.toBase58()],r||this._commitment||"finalized","base64",i?{filters:i}:void 0);return this._makeSubscription({callback:t,method:"programSubscribe",unsubscribeMethod:"programUnsubscribe"},n)}async removeProgramAccountChangeListener(e){await this._unsubscribeClientSubscription(e,"program account change")}onLogs(e,t,r){const i=this._buildArgs(["object"==typeof e?{mentions:[e.toString()]}:e],r||this._commitment||"finalized");return this._makeSubscription({callback:t,method:"logsSubscribe",unsubscribeMethod:"logsUnsubscribe"},i)}async removeOnLogsListener(e){await this._unsubscribeClientSubscription(e,"logs")}_wsOnLogsNotification(e){const{result:t,subscription:r}=(0,g.vt)(e,Ir);this._handleServerNotification(r,[t.value,t.context])}_wsOnSlotNotification(e){const{result:t,subscription:r}=(0,g.vt)(e,xt);this._handleServerNotification(r,[t])}onSlotChange(e){return this._makeSubscription({callback:e,method:"slotSubscribe",unsubscribeMethod:"slotUnsubscribe"},[])}async removeSlotChangeListener(e){await this._unsubscribeClientSubscription(e,"slot change")}_wsOnSlotUpdatesNotification(e){const{result:t,subscription:r}=(0,g.vt)(e,Nt);this._handleServerNotification(r,[t])}onSlotUpdate(e){return this._makeSubscription({callback:e,method:"slotsUpdatesSubscribe",unsubscribeMethod:"slotsUpdatesUnsubscribe"},[])}async removeSlotUpdateListener(e){await this._unsubscribeClientSubscription(e,"slot update")}async _unsubscribeClientSubscription(e,t){const r=this._subscriptionDisposeFunctionsByClientSubscriptionId[e];r?await r():console.warn(`Ignored unsubscribe request because an active subscription with id \`${e}\` for '${t}' events could not be found.`)}_buildArgs(e,t,r,i){const n=t||this._commitment;if(n||r||i){let t={};r&&(t.encoding=r),n&&(t.commitment=n),i&&(t=Object.assign(t,i)),e.push(t)}return e}_buildArgsAtLeastConfirmed(e,t,r,i){const n=t||this._commitment;if(n&&!["confirmed","finalized"].includes(n))throw new Error("Using Connection with default commitment: `"+this._commitment+"`, but method requires at least `confirmed`");return this._buildArgs(e,t,r,i)}_wsOnSignatureNotification(e){const{result:t,subscription:r}=(0,g.vt)(e,Et);"receivedSignature"!==t.value&&this._subscriptionsAutoDisposedByRpc.add(r),this._handleServerNotification(r,"receivedSignature"===t.value?[{type:"received"},t.context]:[{type:"status",result:t.value},t.context])}onSignature(e,t,r){const i=this._buildArgs([e],r||this._commitment||"finalized"),n=this._makeSubscription({callback:(e,r)=>{if("status"===e.type){t(e.result,r);try{this.removeSignatureListener(n)}catch(i){}}},method:"signatureSubscribe",unsubscribeMethod:"signatureUnsubscribe"},i);return n}onSignatureWithOptions(e,t,r){const{commitment:i,...n}={...r,commitment:r&&r.commitment||this._commitment||"finalized"},s=this._buildArgs([e],i,void 0,n),o=this._makeSubscription({callback:(e,r)=>{t(e,r);try{this.removeSignatureListener(o)}catch(i){}},method:"signatureSubscribe",unsubscribeMethod:"signatureUnsubscribe"},s);return o}async removeSignatureListener(e){await this._unsubscribeClientSubscription(e,"signature result")}_wsOnRootNotification(e){const{result:t,subscription:r}=(0,g.vt)(e,Tt);this._handleServerNotification(r,[t])}onRootChange(e){return this._makeSubscription({callback:e,method:"rootSubscribe",unsubscribeMethod:"rootUnsubscribe"},[])}async removeRootChangeListener(e){await this._unsubscribeClientSubscription(e,"root change")}}class _r{constructor(e){this._keypair=void 0,this._keypair=e??k()}static generate(){return new _r(k())}static fromSecretKey(e,t){if(64!==e.byteLength)throw new Error("bad secret key size");const r=e.slice(32,64);if(!t||!t.skipValidation){const t=e.slice(0,32),i=S(t);for(let e=0;e<32;e++)if(r[e]!==i[e])throw new Error("provided secretKey is invalid")}return new _r({publicKey:r,secretKey:e})}static fromSeed(e){const t=S(e),r=new Uint8Array(64);return r.set(e),r.set(t,32),new _r({publicKey:t,secretKey:r})}get publicKey(){return new E(this._keypair.publicKey)}get secretKey(){return new Uint8Array(this._keypair.secretKey)}}const Br=Object.freeze({CreateLookupTable:{index:0,layout:d.w3([d.DH("instruction"),me("recentSlot"),d.u8("bumpSeed")])},FreezeLookupTable:{index:1,layout:d.w3([d.DH("instruction")])},ExtendLookupTable:{index:2,layout:d.w3([d.DH("instruction"),me(),d.O6(R(),d.cY(d.DH(),-8),"addresses")])},DeactivateLookupTable:{index:3,layout:d.w3([d.DH("instruction")])},CloseLookupTable:{index:4,layout:d.w3([d.DH("instruction")])}});class Wr{constructor(){}static createLookupTable(e){const[t,r]=E.findProgramAddressSync([e.authority.toBuffer(),(0,h.Bq)(BigInt(e.recentSlot),8)],this.programId),i=le(Br.CreateLookupTable,{recentSlot:BigInt(e.recentSlot),bumpSeed:r}),n=[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:e.authority,isSigner:!0,isWritable:!1},{pubkey:e.payer,isSigner:!0,isWritable:!0},{pubkey:ye.programId,isSigner:!1,isWritable:!1}];return[new te({programId:this.programId,keys:n,data:i}),t]}static freezeLookupTable(e){const t=le(Br.FreezeLookupTable),r=[{pubkey:e.lookupTable,isSigner:!1,isWritable:!0},{pubkey:e.authority,isSigner:!0,isWritable:!1}];return new te({programId:this.programId,keys:r,data:t})}static extendLookupTable(e){const t=le(Br.ExtendLookupTable,{addresses:e.addresses.map((e=>e.toBytes()))}),r=[{pubkey:e.lookupTable,isSigner:!1,isWritable:!0},{pubkey:e.authority,isSigner:!0,isWritable:!1}];return e.payer&&r.push({pubkey:e.payer,isSigner:!0,isWritable:!0},{pubkey:ye.programId,isSigner:!1,isWritable:!1}),new te({programId:this.programId,keys:r,data:t})}static deactivateLookupTable(e){const t=le(Br.DeactivateLookupTable),r=[{pubkey:e.lookupTable,isSigner:!1,isWritable:!0},{pubkey:e.authority,isSigner:!0,isWritable:!1}];return new te({programId:this.programId,keys:r,data:t})}static closeLookupTable(e){const t=le(Br.CloseLookupTable),r=[{pubkey:e.lookupTable,isSigner:!1,isWritable:!0},{pubkey:e.authority,isSigner:!0,isWritable:!1},{pubkey:e.recipient,isSigner:!1,isWritable:!0}];return new te({programId:this.programId,keys:r,data:t})}}Wr.programId=new E("AddressLookupTab1e1111111111111111111111111");const Pr=Object.freeze({RequestUnits:{index:0,layout:d.w3([d.u8("instruction"),d.DH("units"),d.DH("additionalFee")])},RequestHeapFrame:{index:1,layout:d.w3([d.u8("instruction"),d.DH("bytes")])},SetComputeUnitLimit:{index:2,layout:d.w3([d.u8("instruction"),d.DH("units")])},SetComputeUnitPrice:{index:3,layout:d.w3([d.u8("instruction"),me("microLamports")])}});class xr{constructor(){}static requestUnits(e){const t=le(Pr.RequestUnits,e);return new te({keys:[],programId:this.programId,data:t})}static requestHeapFrame(e){const t=le(Pr.RequestHeapFrame,e);return new te({keys:[],programId:this.programId,data:t})}static setComputeUnitLimit(e){const t=le(Pr.SetComputeUnitLimit,e);return new te({keys:[],programId:this.programId,data:t})}static setComputeUnitPrice(e){const t=le(Pr.SetComputeUnitPrice,{microLamports:BigInt(e.microLamports)});return new te({keys:[],programId:this.programId,data:t})}}xr.programId=new E("ComputeBudget111111111111111111111111111111");const Cr=d.w3([d.u8("numSignatures"),d.u8("padding"),d.NX("signatureOffset"),d.NX("signatureInstructionIndex"),d.NX("publicKeyOffset"),d.NX("publicKeyInstructionIndex"),d.NX("messageDataOffset"),d.NX("messageDataSize"),d.NX("messageInstructionIndex")]);class Nr{constructor(){}static createInstructionWithPublicKey(e){const{publicKey:t,message:r,signature:n,instructionIndex:s}=e;U(32===t.length,`Public Key must be 32 bytes but received ${t.length} bytes`),U(64===n.length,`Signature must be 64 bytes but received ${n.length} bytes`);const o=Cr.span,a=o+t.length,c=a+n.length,u=i.Buffer.alloc(c+r.length),l=null==s?65535:s;return Cr.encode({numSignatures:1,padding:0,signatureOffset:a,signatureInstructionIndex:l,publicKeyOffset:o,publicKeyInstructionIndex:l,messageDataOffset:c,messageDataSize:r.length,messageInstructionIndex:l},u),u.fill(t,o),u.fill(n,a),u.fill(r,c),new te({keys:[],programId:Nr.programId,data:u})}static createInstructionWithPrivateKey(e){const{privateKey:t,message:r,instructionIndex:i}=e;U(64===t.length,`Private key must be 64 bytes but received ${t.length} bytes`);try{const e=_r.fromSecretKey(t),n=e.publicKey.toBytes(),s=v(r,e.secretKey);return this.createInstructionWithPublicKey({publicKey:n,message:r,signature:s,instructionIndex:i})}catch(n){throw new Error(`Error creating instruction; ${n}`)}}}Nr.programId=new E("Ed25519SigVerify111111111111111111111111111");w.bI.utils.isValidPrivateKey;const Er=w.bI.getPublicKey,Tr=d.w3([d.u8("numSignatures"),d.NX("signatureOffset"),d.u8("signatureInstructionIndex"),d.NX("ethAddressOffset"),d.u8("ethAddressInstructionIndex"),d.NX("messageDataOffset"),d.NX("messageDataSize"),d.u8("messageInstructionIndex"),d.av(20,"ethAddress"),d.av(64,"signature"),d.u8("recoveryId")]);class Or{constructor(){}static publicKeyToEthAddress(e){U(64===e.length,`Public key must be 64 bytes but received ${e.length} bytes`);try{return i.Buffer.from((0,y.lY)(_(e))).slice(-20)}catch(t){throw new Error(`Error constructing Ethereum address: ${t}`)}}static createInstructionWithPublicKey(e){const{publicKey:t,message:r,signature:i,recoveryId:n,instructionIndex:s}=e;return Or.createInstructionWithEthAddress({ethAddress:Or.publicKeyToEthAddress(t),message:r,signature:i,recoveryId:n,instructionIndex:s})}static createInstructionWithEthAddress(e){const{ethAddress:t,message:r,signature:n,recoveryId:s,instructionIndex:o=0}=e;let a;a="string"==typeof t?t.startsWith("0x")?i.Buffer.from(t.substr(2),"hex"):i.Buffer.from(t,"hex"):t,U(20===a.length,`Address must be 20 bytes but received ${a.length} bytes`);const c=12+a.length,u=c+n.length+1,l=i.Buffer.alloc(Tr.span+r.length);return Tr.encode({numSignatures:1,signatureOffset:c,signatureInstructionIndex:o,ethAddressOffset:12,ethAddressInstructionIndex:o,messageDataOffset:u,messageDataSize:r.length,messageInstructionIndex:o,signature:_(n),ethAddress:_(a),recoveryId:s},l),l.fill(_(r),Tr.span),new te({keys:[],programId:Or.programId,data:l})}static createInstructionWithPrivateKey(e){const{privateKey:t,message:r,instructionIndex:n}=e;U(32===t.length,`Private key must be 32 bytes but received ${t.length} bytes`);try{const e=_(t),s=Er(e,!1).slice(1),o=i.Buffer.from((0,y.lY)(_(r))),[a,c]=((e,t)=>{const r=w.bI.sign(e,t);return[r.toCompactRawBytes(),r.recovery]})(o,e);return this.createInstructionWithPublicKey({publicKey:s,message:r,signature:a,recoveryId:c,instructionIndex:n})}catch(s){throw new Error(`Error creating instruction; ${s}`)}}}var zr;Or.programId=new E("KeccakSecp256k11111111111111111111111111111");const Kr=new E("StakeConfig11111111111111111111111111111111");class qr{constructor(e,t,r){this.unixTimestamp=void 0,this.epoch=void 0,this.custodian=void 0,this.unixTimestamp=e,this.epoch=t,this.custodian=r}}zr=qr,qr.default=new zr(0,0,E.default);const Lr=Object.freeze({Initialize:{index:0,layout:d.w3([d.DH("instruction"),((e="authorized")=>d.w3([R("staker"),R("withdrawer")],e))(),((e="lockup")=>d.w3([d.Wg("unixTimestamp"),d.Wg("epoch"),R("custodian")],e))()])},Authorize:{index:1,layout:d.w3([d.DH("instruction"),R("newAuthorized"),d.DH("stakeAuthorizationType")])},Delegate:{index:2,layout:d.w3([d.DH("instruction")])},Split:{index:3,layout:d.w3([d.DH("instruction"),d.Wg("lamports")])},Withdraw:{index:4,layout:d.w3([d.DH("instruction"),d.Wg("lamports")])},Deactivate:{index:5,layout:d.w3([d.DH("instruction")])},Merge:{index:7,layout:d.w3([d.DH("instruction")])},AuthorizeWithSeed:{index:8,layout:d.w3([d.DH("instruction"),R("newAuthorized"),d.DH("stakeAuthorizationType"),j("authoritySeed"),R("authorityOwner")])}});Object.freeze({Staker:{index:0},Withdrawer:{index:1}});class Rr{constructor(){}static initialize(e){const{stakePubkey:t,authorized:r,lockup:i}=e,n=i||qr.default,s=le(Lr.Initialize,{authorized:{staker:_(r.staker.toBuffer()),withdrawer:_(r.withdrawer.toBuffer())},lockup:{unixTimestamp:n.unixTimestamp,epoch:n.epoch,custodian:_(n.custodian.toBuffer())}}),o={keys:[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:oe,isSigner:!1,isWritable:!1}],programId:this.programId,data:s};return new te(o)}static createAccountWithSeed(e){const t=new re;t.add(ye.createAccountWithSeed({fromPubkey:e.fromPubkey,newAccountPubkey:e.stakePubkey,basePubkey:e.basePubkey,seed:e.seed,lamports:e.lamports,space:this.space,programId:this.programId}));const{stakePubkey:r,authorized:i,lockup:n}=e;return t.add(this.initialize({stakePubkey:r,authorized:i,lockup:n}))}static createAccount(e){const t=new re;t.add(ye.createAccount({fromPubkey:e.fromPubkey,newAccountPubkey:e.stakePubkey,lamports:e.lamports,space:this.space,programId:this.programId}));const{stakePubkey:r,authorized:i,lockup:n}=e;return t.add(this.initialize({stakePubkey:r,authorized:i,lockup:n}))}static delegate(e){const{stakePubkey:t,authorizedPubkey:r,votePubkey:i}=e,n=le(Lr.Delegate);return(new re).add({keys:[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:i,isSigner:!1,isWritable:!1},{pubkey:ne,isSigner:!1,isWritable:!1},{pubkey:ae,isSigner:!1,isWritable:!1},{pubkey:Kr,isSigner:!1,isWritable:!1},{pubkey:r,isSigner:!0,isWritable:!1}],programId:this.programId,data:n})}static authorize(e){const{stakePubkey:t,authorizedPubkey:r,newAuthorizedPubkey:i,stakeAuthorizationType:n,custodianPubkey:s}=e,o=le(Lr.Authorize,{newAuthorized:_(i.toBuffer()),stakeAuthorizationType:n.index}),a=[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:ne,isSigner:!1,isWritable:!0},{pubkey:r,isSigner:!0,isWritable:!1}];return s&&a.push({pubkey:s,isSigner:!0,isWritable:!1}),(new re).add({keys:a,programId:this.programId,data:o})}static authorizeWithSeed(e){const{stakePubkey:t,authorityBase:r,authoritySeed:i,authorityOwner:n,newAuthorizedPubkey:s,stakeAuthorizationType:o,custodianPubkey:a}=e,c=le(Lr.AuthorizeWithSeed,{newAuthorized:_(s.toBuffer()),stakeAuthorizationType:o.index,authoritySeed:i,authorityOwner:_(n.toBuffer())}),u=[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:r,isSigner:!0,isWritable:!1},{pubkey:ne,isSigner:!1,isWritable:!1}];return a&&u.push({pubkey:a,isSigner:!0,isWritable:!1}),(new re).add({keys:u,programId:this.programId,data:c})}static splitInstruction(e){const{stakePubkey:t,authorizedPubkey:r,splitStakePubkey:i,lamports:n}=e,s=le(Lr.Split,{lamports:n});return new te({keys:[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:i,isSigner:!1,isWritable:!0},{pubkey:r,isSigner:!0,isWritable:!1}],programId:this.programId,data:s})}static split(e,t){const r=new re;return r.add(ye.createAccount({fromPubkey:e.authorizedPubkey,newAccountPubkey:e.splitStakePubkey,lamports:t,space:this.space,programId:this.programId})),r.add(this.splitInstruction(e))}static splitWithSeed(e,t){const{stakePubkey:r,authorizedPubkey:i,splitStakePubkey:n,basePubkey:s,seed:o,lamports:a}=e,c=new re;return c.add(ye.allocate({accountPubkey:n,basePubkey:s,seed:o,space:this.space,programId:this.programId})),t&&t>0&&c.add(ye.transfer({fromPubkey:e.authorizedPubkey,toPubkey:n,lamports:t})),c.add(this.splitInstruction({stakePubkey:r,authorizedPubkey:i,splitStakePubkey:n,lamports:a}))}static merge(e){const{stakePubkey:t,sourceStakePubKey:r,authorizedPubkey:i}=e,n=le(Lr.Merge);return(new re).add({keys:[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:r,isSigner:!1,isWritable:!0},{pubkey:ne,isSigner:!1,isWritable:!1},{pubkey:ae,isSigner:!1,isWritable:!1},{pubkey:i,isSigner:!0,isWritable:!1}],programId:this.programId,data:n})}static withdraw(e){const{stakePubkey:t,authorizedPubkey:r,toPubkey:i,lamports:n,custodianPubkey:s}=e,o=le(Lr.Withdraw,{lamports:n}),a=[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:i,isSigner:!1,isWritable:!0},{pubkey:ne,isSigner:!1,isWritable:!1},{pubkey:ae,isSigner:!1,isWritable:!1},{pubkey:r,isSigner:!0,isWritable:!1}];return s&&a.push({pubkey:s,isSigner:!0,isWritable:!1}),(new re).add({keys:a,programId:this.programId,data:o})}static deactivate(e){const{stakePubkey:t,authorizedPubkey:r}=e,i=le(Lr.Deactivate);return(new re).add({keys:[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:ne,isSigner:!1,isWritable:!1},{pubkey:r,isSigner:!0,isWritable:!1}],programId:this.programId,data:i})}}Rr.programId=new E("Stake11111111111111111111111111111111111111"),Rr.space=200;const Yr=Object.freeze({InitializeAccount:{index:0,layout:d.w3([d.DH("instruction"),((e="voteInit")=>d.w3([R("nodePubkey"),R("authorizedVoter"),R("authorizedWithdrawer"),d.u8("commission")],e))()])},Authorize:{index:1,layout:d.w3([d.DH("instruction"),R("newAuthorized"),d.DH("voteAuthorizationType")])},Withdraw:{index:3,layout:d.w3([d.DH("instruction"),d.Wg("lamports")])},UpdateValidatorIdentity:{index:4,layout:d.w3([d.DH("instruction")])},AuthorizeWithSeed:{index:10,layout:d.w3([d.DH("instruction"),((e="voteAuthorizeWithSeedArgs")=>d.w3([d.DH("voteAuthorizationType"),R("currentAuthorityDerivedKeyOwnerPubkey"),j("currentAuthorityDerivedKeySeed"),R("newAuthorized")],e))()])}});Object.freeze({Voter:{index:0},Withdrawer:{index:1}});class jr{constructor(){}static initializeAccount(e){const{votePubkey:t,nodePubkey:r,voteInit:i}=e,n=le(Yr.InitializeAccount,{voteInit:{nodePubkey:_(i.nodePubkey.toBuffer()),authorizedVoter:_(i.authorizedVoter.toBuffer()),authorizedWithdrawer:_(i.authorizedWithdrawer.toBuffer()),commission:i.commission}}),s={keys:[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:oe,isSigner:!1,isWritable:!1},{pubkey:ne,isSigner:!1,isWritable:!1},{pubkey:r,isSigner:!0,isWritable:!1}],programId:this.programId,data:n};return new te(s)}static createAccount(e){const t=new re;return t.add(ye.createAccount({fromPubkey:e.fromPubkey,newAccountPubkey:e.votePubkey,lamports:e.lamports,space:this.space,programId:this.programId})),t.add(this.initializeAccount({votePubkey:e.votePubkey,nodePubkey:e.voteInit.nodePubkey,voteInit:e.voteInit}))}static authorize(e){const{votePubkey:t,authorizedPubkey:r,newAuthorizedPubkey:i,voteAuthorizationType:n}=e,s=le(Yr.Authorize,{newAuthorized:_(i.toBuffer()),voteAuthorizationType:n.index}),o=[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:ne,isSigner:!1,isWritable:!1},{pubkey:r,isSigner:!0,isWritable:!1}];return(new re).add({keys:o,programId:this.programId,data:s})}static authorizeWithSeed(e){const{currentAuthorityDerivedKeyBasePubkey:t,currentAuthorityDerivedKeyOwnerPubkey:r,currentAuthorityDerivedKeySeed:i,newAuthorizedPubkey:n,voteAuthorizationType:s,votePubkey:o}=e,a=le(Yr.AuthorizeWithSeed,{voteAuthorizeWithSeedArgs:{currentAuthorityDerivedKeyOwnerPubkey:_(r.toBuffer()),currentAuthorityDerivedKeySeed:i,newAuthorized:_(n.toBuffer()),voteAuthorizationType:s.index}}),c=[{pubkey:o,isSigner:!1,isWritable:!0},{pubkey:ne,isSigner:!1,isWritable:!1},{pubkey:t,isSigner:!0,isWritable:!1}];return(new re).add({keys:c,programId:this.programId,data:a})}static withdraw(e){const{votePubkey:t,authorizedWithdrawerPubkey:r,lamports:i,toPubkey:n}=e,s=le(Yr.Withdraw,{lamports:i}),o=[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:n,isSigner:!1,isWritable:!0},{pubkey:r,isSigner:!0,isWritable:!1}];return(new re).add({keys:o,programId:this.programId,data:s})}static safeWithdraw(e,t,r){if(e.lamports>t-r)throw new Error("Withdraw will leave vote account with insufficient funds.");return jr.withdraw(e)}static updateValidatorIdentity(e){const{votePubkey:t,authorizedWithdrawerPubkey:r,nodePubkey:i}=e,n=le(Yr.UpdateValidatorIdentity),s=[{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:i,isSigner:!0,isWritable:!1},{pubkey:r,isSigner:!0,isWritable:!1}];return(new re).add({keys:s,programId:this.programId,data:n})}}jr.programId=new E("Vote111111111111111111111111111111111111111"),jr.space=3762;new E("Va1idator1nfo111111111111111111111111111111"),(0,g.NW)({name:(0,g.Yj)(),website:(0,g.lq)((0,g.Yj)()),details:(0,g.lq)((0,g.Yj)()),keybaseUsername:(0,g.lq)((0,g.Yj)())});new E("Vote111111111111111111111111111111111111111"),d.w3([R("nodePubkey"),R("authorizedWithdrawer"),d.u8("commission"),d.I0(),d.O6(d.w3([d.I0("slot"),d.DH("confirmationCount")]),d.cY(d.DH(),-8),"votes"),d.u8("rootSlotValid"),d.I0("rootSlot"),d.I0(),d.O6(d.w3([d.I0("epoch"),R("authorizedVoter")]),d.cY(d.DH(),-8),"authorizedVoters"),d.w3([d.O6(d.w3([R("authorizedPubkey"),d.I0("epochOfLastAuthorizedSwitch"),d.I0("targetEpoch")]),32,"buf"),d.I0("idx"),d.u8("isEmpty")],"priorVoters"),d.I0(),d.O6(d.w3([d.I0("epoch"),d.I0("credits"),d.I0("prevCredits")]),d.cY(d.DH(),-8),"epochCredits"),d.w3([d.I0("slot"),d.I0("timestamp")],"lastTimestamp")]);const Hr={http:{devnet:"http://api.devnet.solana.com",testnet:"http://api.testnet.solana.com","mainnet-beta":"http://api.mainnet-beta.solana.com/"},https:{devnet:"https://api.devnet.solana.com",testnet:"https://api.testnet.solana.com","mainnet-beta":"https://api.mainnet-beta.solana.com/"}};function Dr(e,t){const r=!1===t?"http":"https";if(!e)return Hr[r].devnet;const i=Hr[r][e];if(!i)throw new Error(`Unknown ${r} cluster: ${e}`);return i}const Mr=1e9}}]);
//# sourceMappingURL=8015bd09-91950a1ecaca736cc97a.js.map